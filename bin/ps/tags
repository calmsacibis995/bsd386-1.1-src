EOFF	keyword.c	/^#define	EOFF(x)	offsetof(struct eproc, x)$/
Mps	ps.c	/^main(argc, argv)$/
POFF	keyword.c	/^#define	POFF(x)	offsetof(struct proc, x)$/
ROFF	keyword.c	/^#define	ROFF(x)	offsetof(struct rusage, x)$/
UOFF	keyword.c	/^#define	UOFF(x)	offsetof(struct usave, x)$/
VSIZE	ps.c	/^#define VSIZE(k) (KI_EPROC(k)->e_vm.vm_dsize + KI_/
c2rdev	ps.c	/^c2rdev(dev_t tdev)$/
cmdpart	fmt.c	/^cmdpart(arg0)$/
command	print.c	/^command(k, v, next)$/
cputime	print.c	/^cputime(k, v)$/
donlist	nlist.c	/^donlist()$/
err	ps.c	/^err(fmt, va_alist)$/
evar	print.c	/^evar(k, v)$/
findvar	keyword.c	/^findvar(p)$/
fmt	ps.c	/^fmt(fn, ki, comm, maxlen)$/
fmt_argv	fmt.c	/^fmt_argv(argv, cmd, maxlen)$/
fxtofl	print.c	/^#define	fxtofl(fixpt)	((double)(fixpt) \/ fscale)$/
getpcpu	print.c	/^getpcpu(k)$/
getpmem	print.c	/^getpmem(k)$/
kludge_oldps_options	ps.c	/^kludge_oldps_options(s)$/
kread	nlist.c	/^#define kread(x, v) \\$/
logname	print.c	/^logname(k, v)$/
longtname	print.c	/^longtname(k, v)$/
lstarted	print.c	/^lstarted(k, v)$/
maxrss	print.c	/^maxrss(k, v)$/
nlisterr	nlist.c	/^nlisterr(nl)$/
p_rssize	print.c	/^p_rssize(k, v)		\/* doesn't account for text *\/$/
pagein	print.c	/^pagein(k, v)$/
parsefmt	keyword.c	/^parsefmt(p)$/
pcpu	print.c	/^pcpu(k, v)$/
pgtok	print.c	/^#define pgtok(a)        (((a)*NBPG)\/1024)$/
pmem	print.c	/^pmem(k, v)$/
pri	print.c	/^pri(k, v)$/
printheader	print.c	/^printheader()$/
printval	print.c	/^printval(bp, v)$/
pscomp	ps.c	/^pscomp(k1, k2)$/
pvar	print.c	/^pvar(k, v)$/
rssize	print.c	/^rssize(k, v)$/
runame	print.c	/^runame(k, v)$/
rvar	print.c	/^rvar(k, v)$/
saveuser	ps.c	/^saveuser(ki)$/
scanvars	ps.c	/^scanvars()$/
showkey	keyword.c	/^showkey()$/
shquote	fmt.c	/^shquote(argv)$/
started	print.c	/^started(k, v)$/
state	print.c	/^state(k, v)$/
tdev	print.c	/^tdev(k, v)$/
tname	print.c	/^tname(k, v)$/
trss	print.c	/^trss(k, v)$/
tsize	print.c	/^tsize(k, v)$/
ucomm	print.c	/^ucomm(k, v)$/
uname	print.c	/^uname(k, v)$/
usage	ps.c	/^usage()$/
uvar	print.c	/^uvar(k, v)$/
vcmp	keyword.c	/^vcmp(a, b)$/
vsize	print.c	/^vsize(k, v)$/
wchan	print.c	/^wchan(k, v)$/
