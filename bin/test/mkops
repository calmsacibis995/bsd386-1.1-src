#	BSDI $Id: mkops,v 1.2 1993/12/17 06:57:45 donn Exp $
#
# Copyright (c) 1988 The Regents of the University of California.
# All rights reserved.
#
# This code is derived from software contributed to Berkeley by
# Kenneth Almquist.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#      @(#)mkops	1.3 (Berkeley) 6/3/92
#


exec > operators.h
awk '/^[^#]/	{printf "#define %s %d\n", $1, n++}' unary_op binary_op
awk '/^[^#]/	{n++}
END	{printf "\n#define FIRST_BINARY_OP %d\n", n}
' unary_op
echo '
#define OP_INT 1		/* arguments to operator are integer */
#define OP_STRING 2		/* arguments to operator are string */
#define OP_FILE 3		/* argument is a file name */
#define OP_LINK 4		/* argument is a file name (use lstat) */

extern char *const unary_op[];
extern char *const binary_op[];
extern const char op_priority[];
extern const char op_argflag[];'

exec > operators.c
echo '/*
 * Operators used in the test command.
 */

#include <stdio.h>
#include "operators.h"

char *const unary_op[] = {'
awk '/^[^#]/	{printf "      \"%s\",\n", $2}' unary_op
echo '      NULL
};

char *const binary_op[] = {'
awk '/^[^#]/	{printf "      \"%s\",\n", $2}' binary_op
echo '      NULL
};

const char op_priority[] = {'
awk '/^[^#]/	{printf "      %s,\n", $3}' unary_op binary_op
echo '};

const char op_argflag[] = {'
awk '/^[^#]/	{if (length($4) > 0)	printf "      %s,\n", $4
		 else			printf "      0,\n"}
' unary_op binary_op
echo '};'
