#!/bin/sh
# Guess values for system-dependent variables and create Makefiles.
# Generated automatically using autoconf.
# Copyright (C) 1991, 1992 Free Software Foundation, Inc.

# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2, or (at your option)
# any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

# Usage: configure [--srcdir=DIR] [--host=HOST] [--gas] [--nfp] [--no-create]
#        [--prefix=PREFIX] [--exec_prefix=PREFIX] [--with-PROGRAM] [TARGET]
# Ignores all args except --srcdir, --prefix, --exec_prefix, and --no-create.

trap 'rm -f conftest* core; exit 1' 1 3 15

for arg
do
  # Handle --exec_prefix with a space before the argument.
  if test x$next_exec_prefix = xyes; then exec_prefix=$arg; next_exec_prefix=
  # Handle --host with a space before the argument.
  elif test x$next_host = xyes; then next_host=
  # Handle --prefix with a space before the argument.
  elif test x$next_prefix = xyes; then prefix=$arg; next_prefix=
  # Handle --srcdir with a space before the argument.
  elif test x$next_srcdir = xyes; then srcdir=$arg; next_srcdir=
  else
    case $arg in
     -exec_prefix=* | --exec_prefix=* | --exec_prefi=* | --exec_pref=* | --exec_pre=* | --exec_pr=* | --exec_p=* | --exec_=* | --exec=* | --exe=* | --ex=* | --e=*)
	exec_prefix=`echo $arg | sed 's/[-a-z_]*=//'` ;;
     -exec_prefix | --exec_prefix | --exec_prefi | --exec_pref | --exec_pre | --exec_pr | --exec_p | --exec_ | --exec | --exe | --ex | --e)
	next_exec_prefix=yes ;;

     -gas | --gas | --ga | --g) ;;

     -host=* | --host=* | --hos=* | --ho=* | --h=*) ;;
     -host | --host | --hos | --ho | --h)
	next_host=yes ;;

     -nfp | --nfp | --nf) ;;

     -no-create | --no-create | --no-creat | --no-crea | --no-cre | --no-cr | --no-c | --no- | --no)
        no_create=1 ;;

     -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)
	prefix=`echo $arg | sed 's/[-a-z_]*=//'` ;;
     -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)
	next_prefix=yes ;;

     -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=* | --s=*)
	srcdir=`echo $arg | sed 's/[-a-z_]*=//'` ;;
     -srcdir | --srcdir | --srcdi | --srcd | --src | --sr | --s)
	next_srcdir=yes ;;

     -with-* | --with-*) ;;

     *) ;;
    esac
  fi
done

rm -f conftest*
compile='${CC-cc} $DEFS conftest.c -o conftest $LIBS >/dev/null 2>&1'

# A filename unique to this package, relative to the directory that
# configure is in, which we can look for to find out if srcdir is correct.
unique_file=dvips.c

# Find the source files, if location was not specified.
if test -z "$srcdir"; then
  srcdirdefaulted=yes; srcdir=.
  if test ! -r $unique_file; then srcdir=..; fi
fi
if test ! -r $srcdir/$unique_file; then
  if test x$srcdirdefaulted = xyes; then
    echo "configure: Can not find sources in \`.' or \`..'." 1>&2
  else
    echo "configure: Can not find sources in \`${srcdir}'." 1>&2
  fi
  exit 1
fi
# Preserve a srcdir of `.' to avoid automounter screwups with pwd.
# But we can't avoid them for `..', to make subdirectories work.
case $srcdir in
  .|/*|~*) ;;
  *) srcdir=`cd $srcdir; pwd` ;; # Make relative path absolute.
esac



compile='rm -f conftest.t;
  mv conftest.c conftest.t;
  echo "$DEFS" > conftest.c;
  cat conftest.t >> conftest.c;
  rm -f conftest.t;
  ${CC-cc} conftest.c -o conftest $LIBS >/dev/null 2>&1'


if test -z "$CC"; then
  echo checking for gcc
  saveifs="$IFS"; IFS="${IFS}:"
  for dir in $PATH; do
    test -z "$dir" && dir=.
    if test -f $dir/gcc; then
      CC="gcc"
      break
    fi
  done
  IFS="$saveifs"
fi
test -z "$CC" && CC="cc"

# Find out if we are using GNU C, under whatever name.
cat <<EOF > conftest.c
#ifdef __GNUC__
  yes
#endif
EOF
${CC-cc} -E conftest.c > conftest.out 2>&1
if egrep yes conftest.out >/dev/null 2>&1; then
  GCC=1 # For later tests.
  CC="$CC -O"
fi
rm -f conftest*

echo checking how to run the C preprocessor
if test -z "$CPP"; then
  CPP='${CC-cc} -E'
  cat <<EOF > conftest.c
$DEFS
#include <stdio.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  :
else
  CPP=/lib/cpp
fi
rm -f conftest*
fi

if test -n "$GCC"; then
  echo checking whether -traditional is needed
  pattern="Autoconf.*'x'"
  prog='#include <sgtty.h>
Autoconf TIOCGETP'
  cat <<EOF > conftest.c
$DEFS
$prog
EOF
eval "$CPP conftest.c > conftest.out 2>&1"
if egrep "$pattern" conftest.out >/dev/null 2>&1; then
  need_trad=1
fi
rm -f conftest*


  if test -z "$need_trad"; then
    prog='#include <termio.h>
Autoconf TCGETA'
    cat <<EOF > conftest.c
$DEFS
$prog
EOF
eval "$CPP conftest.c > conftest.out 2>&1"
if egrep "$pattern" conftest.out >/dev/null 2>&1; then
  need_trad=1
fi
rm -f conftest*

  fi
  test -n "$need_trad" && CC="$CC -traditional"
fi

# Make sure to not get the incompatible SysV /etc/install and
# /usr/sbin/install, which might be in PATH before a BSD-like install,
# or the SunOS /usr/etc/install directory.
if test -z "$INSTALL"; then
  echo checking for install
  saveifs="$IFS"; IFS="${IFS}:"
  for dir in $PATH; do
    test -z "$dir" && dir=.
    case $dir in
    /etc|/usr/sbin|/usr/etc) ;;
    *)
      if test -f $dir/install; then
	INSTALL="$dir/install -c"
	INSTALL_PROGRAM='$(INSTALL)'
	INSTALL_DATA='$(INSTALL) -m 644'
	break
      fi
      ;;
    esac
  done
  IFS="$saveifs"
fi
INSTALL=${INSTALL-cp}
INSTALL_PROGRAM=${INSTALL_PROGRAM-'$(INSTALL)'}
INSTALL_DATA=${INSTALL_DATA-'$(INSTALL)'}


echo checking for POSIXized ISC
if test -d /etc/conf/kconfig.d &&
  grep _POSIX_VERSION /usr/include/sys/unistd.h >/dev/null 2>&1
then
  ISC=1 # If later tests want to check for ISC.
  DEFS="${DEFS}#define _POSIX_SOURCE 1
"
  if test -n "$GCC"; then
    CC="$CC -posix"
  else
    CC="$CC -Xp"
  fi
fi


echo checking for directory library header
echo checking for dirent.h
cat <<EOF > conftest.c
$DEFS
#include <dirent.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  DEFS="${DEFS}#define DIRENT 1
" dirheader=dirent.h
fi
rm -f conftest*

if test -z "$dirheader"; then
echo checking for sys/ndir.h
cat <<EOF > conftest.c
$DEFS
#include <sys/ndir.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  DEFS="${DEFS}#define SYSNDIR 1
" dirheader=sys/ndir.h
fi
rm -f conftest*

fi
if test -z "$dirheader"; then
echo checking for sys/dir.h
cat <<EOF > conftest.c
$DEFS
#include <sys/dir.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  DEFS="${DEFS}#define SYSDIR 1
" dirheader=sys/dir.h
fi
rm -f conftest*

fi

echo checking for closedir return value
cat <<EOF > conftest.c
#include <sys/types.h>
#include <$dirheader>
int closedir(); main() { exit(0); }
EOF
eval $compile
if test -s conftest && (./conftest 2>/dev/null) 2>/dev/null; then
  :
else
  DEFS="${DEFS}#define VOID_CLOSEDIR 1
"
fi
rm -f conftest*

echo checking for limits.h
cat <<EOF > conftest.c
$DEFS
#include <limits.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  : 
else
  DEFS="${DEFS}#define LIMITS_H_MISSING 1
"
fi
rm -f conftest*

echo checking for float.h
cat <<EOF > conftest.c
$DEFS
#include <float.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  : 
else
  DEFS="${DEFS}#define FLOAT_H_MISSING 1
"
fi
rm -f conftest*

echo checking whether string.h declares mem functions
echo "${DEFS}#include <string.h>" > conftest.c
eval "$CPP conftest.c > conftest.out 2>&1"
if egrep "memchr" conftest.out >/dev/null 2>&1; then
  :
else 
  echo checking for memory.h
cat <<EOF > conftest.c
$DEFS
#include <memory.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  DEFS="${DEFS}#define NEED_MEMORY_H 1
"
fi
rm -f conftest*

fi
rm -f conftest*


echo checking for ANSI C header files
cat <<EOF > conftest.c
$DEFS
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <limits.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  DEFS="${DEFS}#define STDC_HEADERS 1
"
fi
rm -f conftest*

echo checking for unistd.h
cat <<EOF > conftest.c
$DEFS
#include <unistd.h>
EOF
err=`eval "$CPP conftest.c 2>&1 >/dev/null"`
if test -z "$err"; then
  DEFS="${DEFS}#define HAVE_UNISTD_H 1
"
fi
rm -f conftest*

echo checking for BSD string and memory functions
echo "#include <strings.h>
main() { exit(0); } t() { rindex(0, 0); bzero(0, 0); }" > conftest.c
if eval $compile; then
  :
else
  DEFS="${DEFS}#define USG 1
"
fi
rm -f conftest*


echo checking integer size
cat <<EOF > conftest.c
main() { exit(!(sizeof(long) > sizeof(int))); }
EOF
eval $compile
if test -s conftest && (./conftest 2>/dev/null) 2>/dev/null; then
  DEFS="${DEFS}#define INT_16_BITS 1
"
fi
rm -f conftest*

echo checking for dvips to derive installation directory prefix
if test -z "$prefix"
then
  saveifs="$IFS"; IFS="$IFS:"
  for dir in $PATH; do
    test -z "$dir" && dir=.
    if test $dir != . && test -f $dir/dvips; then
      # Not all systems have dirname.
      prefix=`echo $dir|sed 's,/[^/][^/]*$,,'`
      break
    fi
  done
  IFS="$saveifs"
fi


if test -n "$prefix"; then
  test -z "$exec_prefix" && exec_prefix='$(prefix)'
  prsub="s,^prefix[ 	]*=.*$,prefix = $prefix,"
fi
if test -n "$exec_prefix"; then
  prsub="$prsub
s,^exec_prefix[ 	]*=.*$,exec_prefix = $exec_prefix,"
fi

trap 'rm -f config.status; exit 1' 1 3 15
echo creating config.status
rm -f config.status
cat <<EOF > config.status
#!/bin/sh
# Generated automatically by configure.
# Run this file to recreate the current configuration.
# This directory was configured as follows:
# $0 $*

case "\$1" in
  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)
  exec /bin/sh $0 $* ;;
esac

trap 'rm -f ./Makefile c-auto.h; exit 1' 1 3 15
CC='$CC'
CPP='$CPP'
INSTALL='$INSTALL'
INSTALL_PROGRAM='$INSTALL_PROGRAM'
INSTALL_DATA='$INSTALL_DATA'
LIBS='$LIBS'
srcdir='$srcdir'
DEFS='$DEFS'
prefix='$prefix'
exec_prefix='$exec_prefix'
prsub='$prsub'
EOF
cat <<\EOF >> config.status

top_srcdir=$srcdir
for file in ./Makefile; do
  srcdir=$top_srcdir
  # Remove last slash and all that follows it.  Not all systems have dirname.
  dir=`echo $file|sed 's,/[^/][^/]*$,,'`
  if test "$dir" != "$file"; then
    test "$top_srcdir" != . && srcdir=$top_srcdir/$dir
    test ! -d $dir && mkdir $dir
  fi
  echo creating $file
  rm -f $file
  echo "# Generated automatically from `basename $file`.in by configure." > $file
  sed -e "
$prsub
s,@CC@,$CC,
s,@CPP@,$CPP,
s,@INSTALL@,$INSTALL,
s,@INSTALL_PROGRAM@,$INSTALL_PROGRAM,
s,@INSTALL_DATA@,$INSTALL_DATA,
s,@LIBS@,$LIBS,
s,@srcdir@,$srcdir,
" $top_srcdir/${file}.in >> $file
done

echo creating c-auto.h
# Ultrix awk loses trailing comments from the header file, but
# that's not fatal.
rm -f conftest.h
echo "/* c-auto.h.  Generated automatically by configure.  */" > conftest.h
echo "$DEFS
/* END_OF_DEFS */" |
awk '
# The escaped newlines are to work around a bug in GNU m4 0.99
# in quoting more than 2 arguments in a single line.
BEGIN { filenum = 1 }
filenum == 1 && $1 == "#define" \
{ defs[$2] = $3
  for (i = 4; i <= NF; i++)
    defs[$2] = defs[$2] " " $i
}
/END_OF_DEFS/ { filenum = 2; next }
filenum == 2 && $1 == "#define" && \
defs[$2] != "" {
  $3 = defs[$2]
  print; next
}
filenum == 2 && $1 == "#undef" && \
defs[$2] != "" {
  $1 = "#define"
  $2 = $2 " " defs[$2]
  print; next
}
filenum == 2 { print }
' - $top_srcdir/c-auto.h.in >> conftest.h
if cmp -s c-auto.h conftest.h 2>/dev/null; then
  # The file exists and we would not be changing it.
  rm -f conftest.h
else
  rm -f c-auto.h
  mv conftest.h c-auto.h
fi

EOF
chmod +x config.status
test -n "$no_create" || ./config.status

