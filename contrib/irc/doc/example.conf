#
#   IRC - Internet Relay Chat, doc/example.conf
#   Copyright (C) 1992, Bill Wisner
#
#   This program is free software; you can redistribute it and/or modify
#   it under the terms of the GNU General Public License as published by
#   the Free Software Foundation; either version 1, or (at your option)
#   any later version.
#
#   This program is distributed in the hope that it will be useful,
#   but WITHOUT ANY WARRANTY; without even the implied warranty of
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#   GNU General Public License for more details.
#
#   You should have received a copy of the GNU General Public License
#   along with this program; if not, write to the Free Software
#   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
#
#
# IRC example configuration file
#
# This file describes the information that should be present in your IRC
# configuration and how to present it.
#
# M: set your server's name. Fields are, in order, host name (domain style),
#    unused, a text name, and the port number for it to operate on. The port
#    number should normally be 6667.
#
M:hayes.ims.alaska.edu::University of Alaska Fairbanks:6667
#
# A: administrative information. This line should have three fields, which
#    may contain any arbitrary text. It is printed by the /ADMIN command.
#
A:University of Alaska Institute of Marine Science:Fairbanks, AK USA:Bill Wisner <wisner@ims.alaska.edu>
#
# Y: define connection class.  A class must be defined in a Y: line before
#    it is used in a C, N, or I line.  The fields are, in order, class number,
#    ping frequency in seconds, connect frequency in seconds, and maximum
#    number of links (used for auto-connecting).
#
# ...clients of a connect frequency of 0
Y:1:90:0:20:10000
Y:2:90:300:10:200000
#
# I: authorize clients to connect to your server. You can use domains,
#    IP addresses, and asterisk wildcards. The second field can contain a
#    password that the client must use in order to be allowed to connect.
#    The optional fifth field may contain a connection class number.
#
I:*.alaska.edu::*.alaska.edu::1
I:acad3.alaska.edu:password:acad3.alaska.edu::1
#
#    If using IDENT, to activate it, you need to place a "user@" in the
#    host segment.
#
I:*@acad3.alask.edu::*@acad3.alaska.edu::1
I:root@acad.alask.edu::root@acad.alaska.edu::1
#
# The above are bad examples of I-lines, what really happens is something
# like this:
#
I:128.250.*::*.mu.oz.au::1
I:root@128.250.*::root@*.mu.oz.au::1
#
# a name pattern in the first field will never cause a match since it's only
# ever matched against ann IP# in the form a.b.c.d and a number in the third
# field will never match since a hostname is always compared against this
# field.  The '@' needs to be in the IP# section for ident to be used.
#
# O: authorize operators. Fields are, in order, host name the operator must
#    be logged in from (wildcards allowed), operator's password, operator's
#    nickname. The first example allows me to become an operator from any
#    machine in alaska.edu by typing /oper crunchy frog.
#
O:*.alaska.edu:frog:crunchy
#
# U: define the default server for the IRC client.  This line is now
#    obsolete and should be put in the UPHOST definition in config.h.
#
# U:hayes.ims.alaska.edu:password:hayes.ims.alaska.edu:6667
#
# C:, N: set up connections to other servers.
#
# C: specifies a server that your server may connect to.
# N: allows a remote server to connect to your own.
#
# The two lines are usually given in pairs.
#
# These lines may contain a password in the second field.  In fact, to
# maintain proper security, *all* IRC server links must have passwords.
#
# If a C: line contains four fields (the fourth being a TCP port number)
# IRC will actively try to connect to that server. You should have at least
# one such line.
#
# If an N: line contains four fields, the fourth should contain a number that
# specifies how many components of your own server's name to strip off the
# front and be replaced with a *.  This is done to implement hostmasking.
# For example, to make hayes.ims.alaska.edu present itself to the world as
# *.alaska.edu, I would use a 2 (to strip off the first two parts).  If you
# use this, be sure to tell the administrator of the servers you link to --
# they must add your hostmasked name to their configuration file or you will
# be unable to connect.
#
# The fifth field may contain a connection class number.
#
# The following two lines tell my server to try connecting to
# byron.u.washington.edu.
#
C:byron.u.washington.edu:crunchyfrog:byron.u.washington.edu:6667:2
N:byron.u.washington.edu:crunchyfrog:byron.u.washington.edu:2:2
#
# The following two lines allow a server to connect to my server, but my
# server will not make any attempt to connect to it.  Note that since the
# server is local to me, I am not using hostmasking.
#
C:kaja.gi.alaska.edu:llamas:kaja.gi.alaska.edu::2
N:kaja.gi.alaska.edu:llamas:kaja.gi.alaska.edu::2
#
# C and N lines may also use the "user@" combination in the same way as
# the I-lines.
#
C:wisner@kaja.gi.alaska.edu:llamas:kaja.gi.alaska.edu::2
N:wisner@kaja.gi.alaska.edu:llamas:kaja.gi.alaska.edu::2
#
# K: kill a user automatically upon connecting.  This is used to deny
#    troublesome users access to your server.  The fields are, in order,
#    hostname (wildcards are allowed), time of day, and username.
#
# The second example restricts access from acad3.alaska.edu from
# 9:00am to noon, and 2:00pm to 5:00pm.
#
K:*.alaska.edu::FSSPR
K:acad3.alaska.edu:0900-1200,1400-1700:*
#
# R: restrict user access.  This is an extended form of the K: line.
#    It looks for a match then runs an outside program that will determine
#    whether the person should be allowed on.  The fields are hostname,
#    program, and username.  A full pathname to the program should be used.
#    The output of the program should be a string of the form "Y <message>"
#    to allow the user, or "N <message>" to block them.  In the first case
#    the message is ignored; in the latter, it is sent as an error message
#    to the user.  R: lines are only functional if activated in config.h.
#
R:kaja.gi.alaska.edu:/usr/local/lib/irc/does-eric-get-in:ejo
#
# Q: quarantine.  This line declares a given server anathema and drops the
#    link to anyone connecting to them.  Use of Q: lines can cause major
#    network disruption and is *STRONGLY* discouraged unless part of a
#    coordinated action among many servers.
#
Q::server is run by weenies:poe.acc.virginia.edu
#
# L: leaf.  This forces the server listed to act as a leaf.  If such a
#    server allows any other servers to connect to it, its link is
#    dropped. If a port parameter is non-zero, it is used to control the
#    maximum depth that link will allow, where depth is the tree depth of
#    that branch.
#
L:::kaja.gi.alaska.edu
L:::cm5.eng.umd.edu:1
#
#    A new extension to the L-line allows you to be selective
#    about which other servers you wish the connecting server to behave as
#    as a leaf towards.  The following would not allow any server connecting
#    with a name that matches *.fi to introduce a server matching *.edu.
#
L:*.edu::*.fi
#
# H: Hub.  This is required to allow other servers which connect to you as
#    a hub and introduce other severs.
#
H:*.au:*:*.au
#
# P : port. The port line allows the server to listen on various ports for
#     connections. The port may either be in the unix domain or the internet
#     domain. If you wish to create a port in the unix domain, you must
#     compile with UNIXPORT defined in config.h. If setting up an addition
#     internet port, access control can be used in the host field.
#
P:/tmp/.ircd:::6667
P:128.32.*:::6665
#
# Above create a unix socket in /tmp/.ircd directory and listens on port 6665
# for connections from net 128.32. This is checked before existance of other
# access is available. Also, 128.32.* == 128.32.0.0 where 0 is a wildcard.
#
