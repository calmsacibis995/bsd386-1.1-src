AbbrevExpand	abbrev.c	/^AbbrevExpand()$/
AddError	proc.c	/^AddError(laste, errline, buf, line, charpos)$/
AddLines	disp.c	/^AddLines(at, num)$/
AllMarkSet	marks.c	/^AllMarkSet(b, line, col)$/
AppReg	io.c	/^AppReg()$/
Apropos	keymaps.c	/^Apropos()$/
BList	c.c	/^BList()$/
BSexpr	c.c	/^BSexpr()$/
BUpList	c.c	/^BUpList()$/
B_HASH	io.c	/^#define B_HASH(bno)	((bno) % HASHSIZE)$/
BackChar	move.c	/^BackChar()$/
BackPara	paragraph.c	/^BackPara()$/
BackWord	move.c	/^BackWord()$/
BindAKey	keymaps.c	/^BindAKey()$/
BindMac	keymaps.c	/^BindMac()$/
BindMtoW	abbrev.c	/^BindMtoW()$/
BindWMap	keymaps.c	/^BindWMap(map, lastkey, cmd)$/
Bof	move.c	/^Bof()$/
Bol	move.c	/^Bol()$/
Bos	move.c	/^Bos()$/
Bow	disp.c	/^Bow()$/
Buf10Select	buf.c	/^void Buf10Select() { BufNSelect(10); }$/
Buf1Select	buf.c	/^void Buf1Select() { BufNSelect(1); }$/
Buf2Select	buf.c	/^void Buf2Select() { BufNSelect(2); }$/
Buf3Select	buf.c	/^void Buf3Select() { BufNSelect(3); }$/
Buf4Select	buf.c	/^void Buf4Select() { BufNSelect(4); }$/
Buf5Select	buf.c	/^void Buf5Select() { BufNSelect(5); }$/
Buf6Select	buf.c	/^void Buf6Select() { BufNSelect(6); }$/
Buf7Select	buf.c	/^void Buf7Select() { BufNSelect(7); }$/
Buf8Select	buf.c	/^void Buf8Select() { BufNSelect(8); }$/
Buf9Select	buf.c	/^void Buf9Select() { BufNSelect(9); }$/
BufErase	buf.c	/^BufErase()$/
BufKill	buf.c	/^BufKill()$/
BufList	buf.c	/^BufList()$/
BufNSelect	buf.c	/^BufNSelect(n)$/
BufPos	extend.c	/^BufPos()$/
BufSelect	buf.c	/^BufSelect()$/
CAutoExec	extend.c	/^CAutoExec()$/
CalcWind	wind.c	/^CalcWind(w)$/
CapChar	case.c	/^CapChar()$/
CapWord	case.c	/^CapWord()$/
CasRegLower	case.c	/^CasRegLower()$/
CasRegUpper	case.c	/^CasRegUpper()$/
CaseReg	case.c	/^CaseReg(up)$/
CentWind	wind.c	/^CentWind(w)$/
Chdir	io.c	/^Chdir()$/
ChkWindows	disp.c	/^ChkWindows(line1, line2)$/
ChrToOct	misc.c	/^ChrToOct()$/
ClAndRedraw	disp.c	/^ClAndRedraw()$/
Comment	c.c	/^Comment()$/
CopyRegion	delete.c	/^CopyRegion()$/
CurMark	marks.c	/^CurMark()$/
CursMin	screen.c	/^#define CursMin(which,addrs,max)	{ \\$/
DBXpoutput	iproc.c	/^DBXpoutput()$/
DFixMarks	marks.c	/^DFixMarks(line1, char1, line2, char2)$/
DOTsave	util.c	/^DOTsave(buf)$/
Dchdir	io.c	/^Dchdir(to)$/
DeTab	disp.c	/^DeTab(s_offset, buf, outbuf, limit, visspace)$/
DefGAbbrev	abbrev.c	/^DefGAbbrev()$/
DefKBDMac	macros.c	/^DefKBDMac()$/
DefMAbbrev	abbrev.c	/^DefMAbbrev()$/
DelBlnkLines	delete.c	/^DelBlnkLines()$/
DelChar	disp.c	/^DelChar(lineno, col, num)$/
DelCurWindow	wind.c	/^DelCurWindow()$/
DelLines	disp.c	/^DelLines(at, num)$/
DelMacro	macros.c	/^DelMacro()$/
DelMark	marks.c	/^DelMark(m)$/
DelNChar	delete.c	/^DelNChar()$/
DelNWord	delete.c	/^DelNWord()$/
DelPChar	delete.c	/^DelPChar()$/
DelPWord	delete.c	/^DelPWord()$/
DelReg	delete.c	/^DelReg()$/
DelWtSpace	delete.c	/^DelWtSpace()$/
DescBindings	keymaps.c	/^DescBindings()$/
DescCom	keymaps.c	/^void DescCom() { desc_comvar(0); }$/
DescMap	keymaps.c	/^DescMap(map, pref)$/
DescVar	keymaps.c	/^void DescVar() { desc_comvar(1); }$/
DescWMap	keymaps.c	/^DescWMap(map, key)$/
Digit	argcount.c	/^Digit()$/
Digit0	argcount.c	/^Digit0()$/
Digit1	argcount.c	/^Digit1()$/
Digit2	argcount.c	/^Digit2()$/
Digit3	argcount.c	/^Digit3()$/
Digit4	argcount.c	/^Digit4()$/
Digit5	argcount.c	/^Digit5()$/
Digit6	argcount.c	/^Digit6()$/
Digit7	argcount.c	/^Digit7()$/
Digit8	argcount.c	/^Digit8()$/
Digit9	argcount.c	/^Digit9()$/
DoAutoExec	extend.c	/^DoAutoExec(new, old)$/
DoIDline	disp.c	/^DoIDline(start)$/
DoJustify	paragraph.c	/^DoJustify(l1, c1, l2, c2, scrunch, indent)$/
DoKeys	jove.c	/^DoKeys(firsttime)$/
DoPara	paragraph.c	/^DoPara(dir)$/
DoParen	insert.c	/^DoParen()$/
DoShell	proc.c	/^DoShell(bnm, command)$/
DoWriteReg	io.c	/^DoWriteReg(app)$/
DotTo	util.c	/^DotTo(line, col)$/
DownScroll	disp.c	/^DownScroll()$/
DrawMesg	disp.c	/^DrawMesg(abortable)$/
EVexpand	ask.c	/^EVexpand()$/
EditAbbrevs	abbrev.c	/^EditAbbrevs()$/
Eof	move.c	/^Eof()$/
Eol	move.c	/^Eol()$/
Eos	move.c	/^Eos()$/
Eow	disp.c	/^Eow()$/
ErrFree	proc.c	/^ErrFree()$/
ErrParse	proc.c	/^ErrParse()$/
ExecCmd	util.c	/^ExecCmd(cp)$/
ExecMacro	macros.c	/^ExecMacro()$/
Extend	extend.c	/^Extend()$/
FDotTag	re1.c	/^FDotTag()$/
FDownList	c.c	/^FDownList()$/
FLine	wind.c	/^FLine(w)$/
FList	c.c	/^FList()$/
FSexpr	c.c	/^FSexpr()$/
FSrchND	re.c	/^FSrchND()$/
FillComment	c.c	/^FillComment(format)$/
FilterRegion	proc.c	/^FilterRegion()$/
FindCmd	util.c	/^FindCmd(proc)$/
FindFile	buf.c	/^FindFile()$/
FindMatch	c.c	/^FindMatch(dir)$/
FindTag	re1.c	/^FindTag()$/
ForChar	move.c	/^ForChar()$/
ForPara	paragraph.c	/^ForPara()$/
ForSearch	re.c	/^ForSearch()$/
ForWord	move.c	/^ForWord()$/
Forget	macros.c	/^Forget()$/
FullRecover	rec.c	/^FullRecover()$/
GoChar	misc.c	/^GoChar()$/
GoLine	misc.c	/^GoLine()$/
GotoDot	disp.c	/^GotoDot()$/
GotoWind	wind.c	/^GotoWind()$/
GrowWindow	wind.c	/^GrowWindow()$/
Help	keymaps.c	/^Help()$/
IDchar	disp.c	/^IDchar(new, lineno, col)$/
IDcomp	disp.c	/^IDcomp(s, t, len)$/
IFixMarks	marks.c	/^IFixMarks(line1, char1, line2, char2)$/
INSmode	disp.c	/^INSmode(on)$/
IOerr	util.c	/^IOerr(err, file)$/
IncFSearch	re1.c	/^IncFSearch()$/
IncRSearch	re1.c	/^IncRSearch()$/
IncSearch	re1.c	/^IncSearch(dir)$/
InitCM	term.c	/^InitCM()$/
InitKeymaps	keymaps.c	/^InitKeymaps()$/
InsChar	disp.c	/^InsChar(lineno, col, num, new)$/
InsFile	io.c	/^InsFile()$/
Insert	insert.c	/^Insert(c)$/
Iprocess	iproc.c	/^Iprocess()$/
IsPrefix	keymaps.c	/^IsPrefix(cp)$/
Justify	paragraph.c	/^Justify()$/
KeyDesc	keymaps.c	/^KeyDesc()$/
KillBos	misc.c	/^KillBos()$/
KillEOL	misc.c	/^KillEOL()$/
KillEos	misc.c	/^KillEos()$/
KillExpr	misc.c	/^KillExpr()$/
KillProcs	iproc.c	/^KillProcs()$/
KillSome	buf.c	/^KillSome()$/
KmBind	keymaps.c	/^KmBind()$/
LRShift	c.c	/^LRShift()$/
LRUunlink	io.c	/^LRUunlink(b)$/
Leave	misc.c	/^Leave()$/
LineDist	util.c	/^LineDist(nextp, endp)$/
LineInsert	insert.c	/^LineInsert(num)$/
LookingAt	re.c	/^LookingAt(pattern, buf, offset)$/
LowLine	screen.c	/^#define LowLine()	{ putpad(LL, 1); CapLine = ILI; /
LowWord	case.c	/^LowWord()$/
MAutoExec	extend.c	/^MAutoExec()$/
MacInter	macros.c	/^MacInter()$/
MakeErrors	proc.c	/^MakeErrors()$/
MakeKMap	keymaps.c	/^MakeKMap()$/
MakeMark	marks.c	/^MakeMark(line, column, type)$/
MakeName	proc.c	/^MakeName(command)$/
MarkSet	marks.c	/^MarkSet(m, line, column)$/
MaybeAbbrevExpand	insert.c	/^MaybeAbbrevExpand()$/
Mjove	jove.c	/^main()$/
ModBufs	util.c	/^ModBufs(allp)$/
ModMacs	macros.c	/^ModMacs()$/
ModeLine	disp.c	/^ModeLine(w)$/
NameMac	macros.c	/^NameMac()$/
NextError	proc.c	/^NextError()$/
NextLine	move.c	/^NextLine()$/
NextPage	disp.c	/^NextPage()$/
NextWindow	wind.c	/^NextWindow()$/
NotModified	misc.c	/^NotModified()$/
NumSimilar	disp.c	/^NumSimilar(s, t, n)$/
OkayDelete	disp.c	/^OkayDelete(Saved, num, samelength)$/
OkayInsert	disp.c	/^OkayInsert(Saved, num)$/
OkayOut	disp.c	/^#define OkayOut(ch)	{ \\$/
OneWindow	wind.c	/^OneWindow()$/
PPchar	fmt.c	/^PPchar(c, str)$/
PageNWind	wind.c	/^PageNWind()$/
PageScrollDown	disp.c	/^PageScrollDown()$/
PageScrollUp	disp.c	/^PageScrollUp()$/
PathParse	io.c	/^PathParse(name, intobuf)$/
PauseJove	jove.c	/^PauseJove()$/
Peekc	jove.c	/^Peekc()$/
PopMark	marks.c	/^PopMark()$/
Popd	io.c	/^Popd()$/
PrVar	extend.c	/^PrVar()$/
PrefChar	keymaps.c	/^PrefChar(c)$/
PrevError	proc.c	/^PrevError()$/
PrevLine	move.c	/^PrevLine()$/
PrevPage	disp.c	/^PrevPage()$/
PrevWindow	wind.c	/^PrevWindow()$/
PrintHo	screen.c	/^#define PrintHo()	{ putpad(HO, 1); CapLine = CapCo/
ProcBind	keymaps.c	/^ProcBind()$/
ProcKmBind	keymaps.c	/^ProcKmBind()$/
ProcList	iproc.c	/^ProcList()$/
ProcNewline	iproc.c	/^ProcNewline()$/
ProcSendData	iproc.c	/^ProcSendData()$/
PtToMark	marks.c	/^PtToMark()$/
Push	jove.c	/^Push()$/
PushPntp	util.c	/^PushPntp(line)$/
Pushd	io.c	/^Pushd()$/
QRepSearch	re1.c	/^QRepSearch()$/
QuotChar	insert.c	/^QuotChar()$/
REcompile	re.c	/^REcompile(pattern, re, re_blk)$/
REgetc	re.c	/^REgetc()$/
REmatch	re.c	/^REmatch(linep, comp_ptr)$/
RErecur	re.c	/^RErecur()$/
REreset	re.c	/^REreset()$/
RRShift	c.c	/^RRShift()$/
RSrchND	re.c	/^RSrchND()$/
ReNamBuf	buf.c	/^ReNamBuf()$/
ReadFile	io.c	/^ReadFile()$/
Recur	jove.c	/^Recur()$/
RedrawDisplay	disp.c	/^RedrawDisplay()$/
RegJustify	paragraph.c	/^RegJustify()$/
RegReplace	re1.c	/^RegReplace()$/
RegToUnix	proc.c	/^RegToUnix(outbuf, cmd)$/
Remember	macros.c	/^Remember()$/
RepSearch	re1.c	/^RepSearch()$/
ResetTerm	jove.c	/^ResetTerm()$/
RestAbbrevs	abbrev.c	/^RestAbbrevs()$/
RevSearch	re.c	/^RevSearch()$/
RunMacro	macros.c	/^RunMacro()$/
SETBIT	re.c	/^#define	SETBIT(c)	(1 << ((c) % BYTESIZE))$/
SETBYTE	re.c	/^#define	SETBYTE(c)	((c) \/ BYTESIZE)$/
SaveAbbrevs	abbrev.c	/^SaveAbbrevs()$/
SaveFile	io.c	/^SaveFile()$/
ScrollLeft	wind.c	/^ScrollLeft()$/
ScrollRight	wind.c	/^ScrollRight()$/
SelfInsert	insert.c	/^SelfInsert()$/
SendData	iproc.c	/^SendData(newlinep)$/
SetABuf	buf.c	/^SetABuf(b)$/
SetBuf	buf.c	/^SetBuf(newbuf)$/
SetDot	util.c	/^SetDot(bp)$/
SetLMargin	misc.c	/^SetLMargin()$/
SetMark	marks.c	/^SetMark()$/
SetRMargin	misc.c	/^SetRMargin()$/
SetTop	wind.c	/^SetTop(w, line)$/
SetVar	extend.c	/^SetVar()$/
SetWind	wind.c	/^SetWind(new)$/
ShNoBuf	proc.c	/^ShNoBuf()$/
ShToBuf	proc.c	/^ShToBuf()$/
ShellCom	proc.c	/^ShellCom()$/
ShellProc	iproc.c	/^ShellProc()$/
ShowErr	proc.c	/^ShowErr()$/
ShowVersion	jove.c	/^ShowVersion()$/
ShrWindow	wind.c	/^ShrWindow()$/
Shtypeout	proc.c	/^Shtypeout()$/
SimInput	misc.c	/^SimInput()$/
SitFor	util.c	/^SitFor(delay)$/
Source	extend.c	/^Source()$/
SpelBuffer	proc.c	/^SpelBuffer()$/
SpelParse	proc.c	/^SpelParse(bname)$/
SpelWords	proc.c	/^SpelWords()$/
SplitWind	wind.c	/^SplitWind()$/
StrIndex	util.c	/^StrIndex(dir, buf, charpos, what)$/
StrLength	misc.c	/^StrLength()$/
SyncRec	rec.c	/^SyncRec()$/
SyncTmp	io.c	/^SyncTmp()$/
TOstart	disp.c	/^TOstart(name, auto_newline)$/
TOstop	disp.c	/^TOstop()$/
Tab	insert.c	/^Tab()$/
TermError	term.c	/^TermError()$/
TimesFour	argcount.c	/^TimesFour()$/
ToError	proc.c	/^ToError(forward)$/
ToFirst	util.c	/^ToFirst()$/
ToIndent	misc.c	/^ToIndent()$/
ToLast	util.c	/^ToLast()$/
ToMark	marks.c	/^ToMark(m)$/
TogMinor	buf.c	/^TogMinor(bit)$/
TransChar	misc.c	/^TransChar()$/
TransLines	misc.c	/^TransLines()$/
TwoBlank	util.c	/^TwoBlank()$/
Typeout	disp.c	/^Typeout(fmt, va_alist)$/
UNIX_cmdline	jove.c	/^UNIX_cmdline(argc, argv)$/
UnbindC	keymaps.c	/^UnbindC()$/
Ungetc	jove.c	/^Ungetc(c)$/
UnixToBuf	proc.c	/^UnixToBuf(bnm, disp, wsize, clobber, va_alist)$/
UnsetTerm	jove.c	/^UnsetTerm(mesg)$/
UntilEqual	disp.c	/^UntilEqual(start)$/
UpScroll	disp.c	/^UpScroll()$/
UpdLine	disp.c	/^UpdLine(linenum)$/
UpdWindow	disp.c	/^UpdWindow(w, start)$/
UppWord	case.c	/^UppWord()$/
WNumLines	wind.c	/^WNumLines()$/
WVisSpace	wind.c	/^WVisSpace()$/
WindFind	wind.c	/^WindFind()$/
WindSize	wind.c	/^WindSize(w, inc)$/
WriteFile	io.c	/^WriteFile()$/
WriteMacs	macros.c	/^WriteMacs()$/
WrtReg	io.c	/^WrtReg()$/
WtModBuf	misc.c	/^WtModBuf()$/
Yank	misc.c	/^Yank()$/
_flush	fp.c	/^_flush(c, fp)$/
abs	screen.c	/^#define abs(x)	((x) >= 0 ? (x) : -(x))$/
abspath	io.c	/^abspath(so, dest)$/
add_mac	macros.c	/^add_mac(new)$/
add_mess	fmt.c	/^add_mess(fmt, va_alist)$/
addgetc	extend.c	/^addgetc()$/
alloc_mthread	macros.c	/^alloc_mthread()$/
alphacomp	scandir.c	/^alphacomp(a, b)$/
ask	ask.c	/^ask(def, fmt, va_alist)$/
ask_buf	buf.c	/^ask_buf(def)$/
ask_int	extend.c	/^ask_int(prompt, base)$/
aux_complete	extend.c	/^aux_complete(c)$/
b_char	move.c	/^b_char(n)$/
b_unlink	io.c	/^b_unlink(bp)$/
b_word	move.c	/^b_word(num)$/
backref	re.c	/^backref(n, linep)$/
backslashed	c.c	/^backslashed(lp, cpos)$/
bad_extension	ask.c	/^bad_extension(name)$/
basename	util.c	/^basename(f)$/
biff	jove.c	/^biff(on)$/
biff_init	jove.c	/^biff_init()$/
blnkp	util.c	/^blnkp(buf)$/
buf_alloc	buf.c	/^buf_alloc()$/
buf_exists	buf.c	/^buf_exists(name)$/
buf_init	buf.c	/^buf_init()$/
bufname	buf.c	/^bufname(b)$/
byte_copy	util.c	/^byte_copy(from, to, count)$/
c_indent	c.c	/^c_indent(brace)$/
calc_pos	disp.c	/^calc_pos(lp, c_char)$/
case_reg	case.c	/^case_reg(line1, char1, line2, char2, up)	$/
case_word	case.c	/^case_word(up)$/
casecmp	util.c	/^casecmp(s1, s2)$/
casencmp	util.c	/^casencmp(s1, s2, n)$/
charp	jove.c	/^charp()$/
chkCWD	io.c	/^chkCWD(dn)$/
chk_mtime	io.c	/^chk_mtime(thisbuf, fname, how)$/
chkmail	disp.c	/^chkmail(force)$/
chr_to_int	extend.c	/^chr_to_int(cp, base, allints, result)$/
cind_cmp	re.c	/^#define cind_cmp(a, b)	(CaseEquiv[a] == CaseEquiv[/
cl_eol	screen.c	/^cl_eol()$/
cl_scr	screen.c	/^cl_scr(doit)$/
close_file	io.c	/^close_file(fp)$/
closedir	scandir.c	/^closedir(dp)$/
closepipe	proc.c	/^closepipe()$/
clrline	screen.c	/^clrline(cp1, cp2)$/
cmp_char	re1.c	/^#define cmp_char(a, b)	((a) == (b) || (CaseIgnore /
com_finish	proc.c	/^com_finish(status, cmd)$/
complain	jove.c	/^complain(fmt, va_alist)$/
complete	extend.c	/^complete(possible, prompt, flags)$/
confirm	jove.c	/^confirm(fmt, va_alist)$/
copystr	util.c	/^copystr(str)$/
d_cache_init	io.c	/^d_cache_init()$/
dbackup	io.c	/^dbackup(base, offset, c)$/
def_abbrev	abbrev.c	/^def_abbrev(table)$/
defb_wind	buf.c	/^defb_wind(b)$/
define	abbrev.c	/^define(table, abbrev, phrase)$/
del_char	delete.c	/^del_char(dir, num, OK_kill)$/
del_mac	macros.c	/^del_mac(mac)$/
del_wind	wind.c	/^del_wind(wp)$/
desc_comvar	keymaps.c	/^desc_comvar(which)$/
dfollow	io.c	/^dfollow(file, into)$/
dir_name	io.c	/^#define dir_name(dp)	((char *) list_data((dp)))$/
disp_opt_init	disp.c	/^disp_opt_init()$/
dispatch	keymaps.c	/^dispatch(c)$/
div_wind	wind.c	/^div_wind(wp, n)$/
dmp_buf_header	rec.c	/^dmp_buf_header(b)$/
dmppntrs	rec.c	/^dmppntrs(b)$/
do_ask	ask.c	/^do_ask(char *delim, int (*d_proc) proto((int)), ch/
do_cl_eol	disp.c	/^do_cl_eol(linenum)$/
do_comp	re.c	/^do_comp(re_blk, kind)$/
do_expr	c.c	/^do_expr(dir, skip_words)$/
do_find	buf.c	/^do_find(w, fname, force)$/
do_if	extend.c	/^do_if(cmd)$/
do_macro	macros.c	/^do_macro(mac)$/
do_rfill	paragraph.c	/^do_rfill(ulm)$/
do_rtp	iproc.c	/^do_rtp(mp)$/
do_select	buf.c	/^do_select(w, name)$/
do_set_mark	marks.c	/^do_set_mark(l, c)$/
do_sgtty	jove.c	/^do_sgtty()$/
do_space	paragraph.c	/^do_space()$/
dobell	disp.c	/^dobell(n)$/
docompiled	re.c	/^docompiled(dir, re_blk)$/
doformat	fmt.c	/^doformat(sp, fmt, ap)$/
dofread	io.c	/^dofread(fp)$/
doisearch	re1.c	/^doisearch(dir, c, failing)$/
dopipe	util.c	/^dopipe(p)$/
dorecover	jove.c	/^dorecover()$/
dosearch	re.c	/^dosearch(pattern, dir, re)$/
dosputc	screen.c	/^dosputc(c)$/
dowait	proc.c	/^dowait(pid, status)$/
dword	delete.c	/^dword(forward)$/
emalloc	util.c	/^emalloc(size)$/
error	jove.c	/^error(fmt, va_alist)$/
f_alloc	fp.c	/^f_alloc(name, flags, fd, buffer, buf_size)$/
f_char	move.c	/^f_char(n)$/
f_close	fp.c	/^f_close(fp)$/
f_complete	ask.c	/^f_complete(c)$/
f_getint	fp.c	/^f_getint(fp)$/
f_getputl	io.c	/^f_getputl(line, fp)$/
f_gets	fp.c	/^f_gets(fp, buf, max)$/
f_match	ask.c	/^f_match(file)$/
f_mess	fmt.c	/^f_mess(fmt, va_alist)$/
f_open	fp.c	/^f_open(name, flags, buffer, buf_size)$/
f_readn	fp.c	/^f_readn(fp, addr, n)$/
f_seek	fp.c	/^f_seek(fp, offset)$/
f_toNL	fp.c	/^f_toNL(fp)$/
f_word	move.c	/^f_word(num)$/
fake_blkio	io.c	/^fake_blkio(b, iofcn)$/
fb_aux	keymaps.c	/^fb_aux(cp, map, prefix, buf)$/
fd_open	fp.c	/^fd_open(name, flags, fd, buffer, bsize)$/
filbuf	fp.c	/^filbuf(fp)$/
file_backup	io.c	/^file_backup(fname)$/
file_exists	buf.c	/^file_exists(name)$/
file_write	io.c	/^file_write(fname, app)$/
filemunge	io.c	/^filemunge(newname)$/
filename	util.c	/^filename(b)$/
fill_in	ask.c	/^fill_in(dir_vec, n)$/
find_binds	keymaps.c	/^find_binds(dp, buf)$/
find_para	paragraph.c	/^find_para(how)$/
find_pos	disp.c	/^find_pos(line, c_char)$/
find_tag	re1.c	/^find_tag(tag, localp)$/
findcom	funcdefs.c	/^findcom(prompt)$/
findmac	macros.c	/^findmac(prompt)$/
findmap	keymaps.c	/^findmap(fmt)$/
findvar	vars.c	/^findvar(prompt)$/
finish	jove.c	/^finish(code)$/
fixorder	util.c	/^fixorder(line1, char1, line2, char2)$/
fixpath	io.c	/^fixpath(p)$/
flush	fp.c	/^flush(fp)$/
flush_marks	marks.c	/^flush_marks(b)$/
flusho	fp.c	/^flusho()$/
format	fmt.c	/^format(buf, len, fmt, ap)$/
fputnchar	fp.c	/^fputnchar(s, n, fp)$/
free_mthread	macros.c	/^free_mthread(t)$/
free_proc	iproc.c	/^free_proc(child)$/
freedir	scandir.c	/^freedir(nmptr, nentries)$/
fwritef	fmt.c	/^fwritef(fp, fmt, va_alist)$/
gather_numeric_argument	argcount.c	/^gather_numeric_argument(c)$/
gc_openfiles	fp.c	/^gc_openfiles()$/
getCWD	io.c	/^getCWD()$/
getNMbuf	buf.c	/^getNMbuf()$/
getTERM	term.c	/^getTERM()$/
get_FL_info	proc.c	/^get_FL_info(fname, lineno)$/
get_hdir	io.c	/^get_hdir(user, buf)$/
get_indent	paragraph.c	/^get_indent(lp)$/
get_keymaps	keymaps.c	/^get_keymaps(km_buf)$/
get_la	util.c	/^get_la(dp)$/
get_time	util.c	/^get_time(timep, buf, from, to)$/
getblock	io.c	/^getblock(atl, iof)$/
getch	jove.c	/^getch()$/
getline	io.c	/^getline(addr, buf)$/
getsearch	re.c	/^getsearch()$/
getwd	io.c	/^getwd(buffer)$/
hash	abbrev.c	/^hash(a)$/
home	screen.c	/^#define	home()		Placur(0, 0)$/
how_far	move.c	/^how_far(line, col)$/
i_blank	paragraph.c	/^i_blank(lp)$/
i_bsblank	paragraph.c	/^i_bsblank(lp)$/
in_macro	macros.c	/^in_macro()$/
in_window	wind.c	/^in_window(windes, line)$/
initlist	buf.c	/^initlist(b)$/
inlist	util.c	/^inlist(first, what)$/
inorder	util.c	/^inorder(nextp, char1, endp, char2)$/
ins_c	util.c	/^ins_c(c, buf, atchar, num, max)$/
insert	re.c	/^insert(off, endp, which)$/
insert_c	insert.c	/^insert_c(c, n)$/
isdir	ask.c	/^isdir(name)$/
isearch	re1.c	/^isearch(dir, bp)$/
ismword	ctype.c	/^ismword(c)$/
isprocbuf	proc.c	/^isprocbuf(bnm)$/
itoa	util.c	/^itoa(num)$/
jgetchar	jove.c	/^jgetchar()$/
joverc	extend.c	/^joverc(file)$/
jstrchr	util.c	/^jstrchr(sp, c)$/
kill_buf	buf.c	/^kill_buf(delbuf)$/
kill_off	iproc.c	/^kill_off(pid, w)$/
km_destroy	keymaps.c	/^km_destroy(km)$/
km_getkey	keymaps.c	/^#define km_getkey(m, c)	((m)->k_keys[(c) & CHARMAS/
km_lookup	keymaps.c	/^km_lookup(name)$/
km_new	keymaps.c	/^km_new(name, keys)$/
km_newname	keymaps.c	/^km_newname()$/
km_setkey	keymaps.c	/^km_setkey(m, c, d)$/
lastline	util.c	/^lastline(lp)$/
lbptr	io.c	/^lbptr(line)$/
lcontents	util.c	/^lcontents(line)$/
len_error	util.c	/^len_error(flag)$/
length	util.c	/^length(line)$/
line_cnt	buf.c	/^line_cnt(b, buf)$/
line_move	move.c	/^line_move(dir, n, line_cmd)$/
linecopy	util.c	/^linecopy(onto, atchar, from)$/
list_append	list.c	/^list_append(list, element)$/
list_find	list.c	/^list_find(list, element)$/
list_new	list.c	/^list_new()$/
list_pop	list.c	/^list_pop(list)$/
list_push	list.c	/^list_push(list, element)$/
list_remove	list.c	/^list_remove(list_head, element)$/
listput	insert.c	/^listput(buf, after)$/
lockblock	io.c	/^#define lockblock(addr)$/
look_at	re.c	/^look_at(expr)$/
lookup	io.c	/^lookup(bno)$/
lookup_abbrev	abbrev.c	/^lookup_abbrev(table, abbrev)$/
lower	case.c	/^lower(c)$/
lremove	delete.c	/^lremove(line1, line2)$/
lsave	io.c	/^lsave()$/
ltobuf	util.c	/^ltobuf(line, buf)$/
m_paren	c.c	/^m_paren(p_type, dir, can_mismatch, can_stop)$/
mac_exists	macros.c	/^mac_exists(name)$/
mac_getc	macros.c	/^mac_getc()$/
mac_init	macros.c	/^mac_init()$/
mac_putc	macros.c	/^mac_putc(c)$/
mak_buf	buf.c	/^mak_buf()$/
make_argv	util.c	/^make_argv(argv, ap)$/
make_scr	screen.c	/^make_scr()$/
match	extend.c	/^match(choices, what)$/
max	util.c	/^max(a, b)$/
max_line	paragraph.c	/^max_line(l1, l2)$/
member	re.c	/^member(comp_ptr, c, af)$/
message	disp.c	/^message(str)$/
min	util.c	/^min(a, b)$/
min_line	paragraph.c	/^min_line(l1, l2)$/
minib_add	ask.c	/^minib_add(str, movedown)$/
mk_proc_km	keymaps.c	/^mk_proc_km()$/
mkbuflist	buf.c	/^mkbuflist(bnamp)$/
mode_app	disp.c	/^mode_app(str)$/
modify	util.c	/^modify()$/
mp_error	c.c	/^mp_error()$/
n_indent	insert.c	/^n_indent(goal)$/
next_line	util.c	/^next_line(line, num)$/
null_ncpy	util.c	/^null_ncpy(to, from, n)$/
numcomp	util.c	/^numcomp(s1, s2)$/
okay_error	proc.c	/^okay_error()$/
open_file	io.c	/^open_file(fname, buf, how, complainifbad, quiet)$/
opendir	scandir.c	/^opendir(dir)$/
openforpipe	proc.c	/^openforpipe()$/
outld	fmt.c	/^outld(d, base)$/
pad	fmt.c	/^pad(c, amount)$/
parse_cmt_fmt	c.c	/^parse_cmt_fmt(str)$/
patchup	delete.c	/^patchup(line1, char1, line2, char2)$/
pbuftiedp	iproc.c	/^pbuftiedp(b)$/
pipeclose	util.c	/^pipeclose(p)$/
pnt_line	util.c	/^pnt_line()$/
pop_env	util.c	/^pop_env(savejmp)$/
pop_macro_stack	macros.c	/^pop_macro_stack()$/
pop_wind	wind.c	/^pop_wind(name, clobber, btype)$/
pp_key_strokes	util.c	/^pp_key_strokes(buffer, size)$/
prCTIME	misc.c	/^prCTIME()$/
prCWD	io.c	/^prCWD()$/
prDIRS	io.c	/^prDIRS()$/
pr_name	io.c	/^pr_name(fname, okay_home)$/
pr_putc	macros.c	/^pr_putc(c, fp)$/
prev_line	util.c	/^prev_line(line, num)$/
proc_child	iproc.c	/^proc_child(junk)$/
proc_kill	iproc.c	/^proc_kill(p, sig)$/
proc_rec	iproc.c	/^proc_rec(p, buf)$/
proto	ask.c	/^private char * real_ask proto((char *, int (*) pro/
pstate	iproc.c	/^pstate(p)$/
push_env	util.c	/^push_env(savejmp)$/
push_macro_stack	macros.c	/^push_macro_stack(m, count)$/
put_bufs	misc.c	/^put_bufs(askp)$/
putaddr	rec.c	/^putaddr(addr, p)$/
putargpad	term.c	/^putargpad(str, arg, lines)$/
putld	fmt.c	/^putld(d, base)$/
putline	io.c	/^putline(buf)$/
putmatch	re.c	/^putmatch(which, buf, size)$/
putn	rec.c	/^putn(cp, nbytes)$/
putpad	term.c	/^putpad(str, lines)$/
putreg	io.c	/^putreg(fp, line1, char1, line2, char2, makesure)$/
puts	fmt.c	/^puts(str)$/
putstr	fp.c	/^putstr(s)$/
pwd	io.c	/^pwd()$/
quad_numeric_arg	argcount.c	/^quad_numeric_arg()$/
ralloc	util.c	/^ralloc(obj, size)$/
rbell	disp.c	/^rbell()$/
rbwrite	fp.c	/^rbwrite(fd, buf, cnt)$/
re_dosub	re.c	/^re_dosub(re_blk, tobuf, delp)$/
re_indent	c.c	/^re_indent(incr)$/
re_lindex	re.c	/^re_lindex(line, offset, re_blk, lbuf_okay, crater)/
read_file	io.c	/^read_file(file, is_insert)$/
readdir	scandir.c	/^readdir(dp)$/
real_ask	ask.c	/^real_ask(delim, d_proc, def, prompt)$/
real_blkio	io.c	/^real_blkio(b, iofcn)$/
recclose	rec.c	/^recclose()$/
recinit	rec.c	/^recinit()$/
redisplay	disp.c	/^redisplay()$/
reg_delete	delete.c	/^reg_delete(line1, char1, line2, char2)$/
reg_kill	delete.c	/^reg_kill(line2, char2, dot_moved)$/
reopenforpipe	proc.c	/^reopenforpipe()$/
replace	re1.c	/^replace(query, inreg)$/
rest_abbrevs	abbrev.c	/^rest_abbrevs(file)$/
s_mess	fmt.c	/^s_mess(fmt, va_alist)$/
save_abbrevs	abbrev.c	/^save_abbrevs(file)$/
scandir	scandir.c	/^scandir(dir, nmptr, qualify, sorter)$/
scanvec	jove.c	/^scanvec(args, str)$/
search	re.c	/^search(dir, re, setdefault)$/
setCWD	io.c	/^setCWD(d)$/
set_ino	buf.c	/^set_ino(b)$/
set_mark	marks.c	/^set_mark()$/
set_wsize	proc.c	/^set_wsize(wsize)$/
setblock	jove.c	/^setblock(fd, on)	\/* turn blocking on or off *\/$/
setbname	buf.c	/^setbname(b, name)$/
setfname	buf.c	/^setfname(b, name)$/
setsearch	re.c	/^setsearch(str)$/
settout	term.c	/^settout(ttbuf)$/
sindex	util.c	/^sindex(pattern, string)$/
skip_wht_space	misc.c	/^skip_wht_space()$/
slowpoke	util.c	/^slowpoke(junk)$/
soutputc	screen.c	/^#define soutputc(c)	{ if (--n <= 0) break; else sp/
sprint	fmt.c	/^sprint(fmt, va_alist)$/
strip_c	c.c	/^strip_c(from, to)$/
substitute	re1.c	/^substitute(re_blk, query, l1, char1, l2, char2)$/
switchar	proc.c	/^switchar()$/
swritef	fmt.c	/^swritef(str, fmt, va_alist)$/
tailrule	paragraph.c	/^tailrule(lp)$/
tiewind	util.c	/^tiewind(w, bp)$/
tmpclose	io.c	/^tmpclose()$/
tmpinit	io.c	/^tmpinit()$/
to_sent	move.c	/^to_sent(dir)$/
to_word	util.c	/^to_word(dir)$/
toerror	proc.c	/^toerror(forward, num)$/
tputc	term.c	/^tputc(c)$/
ttinit	jove.c	/^ttinit()$/
ttsize	jove.c	/^ttsize()$/
tty_reset	jove.c	/^tty_reset()$/
ttyset	jove.c	/^ttyset(n)$/
unlockblock	io.c	/^#define unlockblock(addr)$/
unmodify	util.c	/^unmodify()$/
unwind_macro_stack	macros.c	/^unwind_macro_stack()$/
updmode	jove.c	/^updmode(junk)$/
upper	case.c	/^upper(c)$/
v_clear	disp.c	/^v_clear(line1, line2)$/
valid_bp	buf.c	/^valid_bp(bp)$/
void	io.c	/^private void	(*blkio) proto((Block *, int (*)()));/
vpr_aux	extend.c	/^vpr_aux(vp, buf)$/
w_nam_typ	wind.c	/^w_nam_typ(name, type)$/
waitchar	util.c	/^waitchar(slow)$/
watch_input	iproc.c	/^watch_input(m)$/
win_reshape	jove.c	/^win_reshape(junk)$/
windbp	wind.c	/^windbp(bp)$/
winit	wind.c	/^winit()$/
within_indent	util.c	/^within_indent()$/
writef	fmt.c	/^writef(fmt, va_alist)$/
yes_or_no_p	ask.c	/^yes_or_no_p(fmt, va_alist)$/
