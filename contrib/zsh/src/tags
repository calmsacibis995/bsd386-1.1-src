Addhnode	table.c	/^void Addhnode(nam,dat,ht,freefunc,canfree) \/**\/$/
COMP_ISEXPAND	zle_tricky.c	/^#define COMP_ISEXPAND(X) ((X) >= COMP_EXPAND)$/
IFN	params.c	/^#define IFN(X) ((int (*)())(X))$/
IPDEF1	params.c	/^#define IPDEF1(A,B,C,D) {NULL,0,A,NULL,IFN(C),IFN(/
IPDEF10	params.c	/^#define IPDEF10(A,C,D) {NULL,0,A,NULL,IFN(D),IFN(C/
IPDEF2	params.c	/^#define IPDEF2(A,B,C,D) {NULL,0,A,NULL,IFN(C),IFN(/
IPDEF3	params.c	/^#define IPDEF3(A) {NULL,0,A,NULL,IFN(nullsetfn),IF/
IPDEF4	params.c	/^#define IPDEF4(A,B) {NULL,0,A,NULL,IFN(nullsetfn),/
IPDEF5	params.c	/^#define IPDEF5(A,B) {NULL,0,A,NULL,IFN(intvarsetfn/
IPDEF6	params.c	/^#define IPDEF6(A,B) {NULL,0,A,NULL,IFN(nullsetfn),/
IPDEF7	params.c	/^#define IPDEF7(A,B) {NULL,0,A,NULL,IFN(strvarsetfn/
IPDEF8	params.c	/^#define IPDEF8(A,B,C) {NULL,0,A,NULL,IFN(colonarrs/
IPDEF9	params.c	/^#define IPDEF9(A,B,C,D) {NULL,0,A,NULL,IFN(arrvars/
Isdir	zle_tricky.c	/^int Isdir(s) \/**\/$/
Minit	init.c	/^void main(argc,argv,envp) \/**\/$/
OPENDIR	zle_tricky.c	/^DIR *OPENDIR(s)$/
SANEKEY	utils.c	/^#define SANEKEY(X) \\$/
_Cmd	text.c	/^#define _Cmd(X) ((Cmd) (X))$/
_Cond	text.c	/^#define _Cond(X) ((Cond) (X))$/
_List	text.c	/^#define _List(X) ((List) (X))$/
_Pline	text.c	/^#define _Pline(X) ((Pline) (X))$/
_Sublist	text.c	/^#define _Sublist(X) ((Sublist) (X))$/
_casecmd	text.c	/^#define _casecmd(X) ((struct casecmd *) (X))$/
_ifcmd	text.c	/^#define _ifcmd(X) ((struct ifcmd *) (X))$/
_whilecmd	text.c	/^#define _whilecmd(X) ((struct whilecmd *) (X))$/
acceptandhold	zle_misc.c	/^void acceptandhold() \/**\/$/
acceptandinfernexthistory	zle_hist.c	/^void acceptandinfernexthistory() \/**\/$/
acceptandmenucomplete	zle_tricky.c	/^void acceptandmenucomplete() \/**\/$/
acceptline	zle_misc.c	/^void acceptline() \/**\/$/
acceptlineanddownhistory	zle_hist.c	/^void acceptlineanddownhistory() \/**\/$/
add	lex.c	/^void add(c) \/**\/$/
addbuiltins	builtin.c	/^void addbuiltins() \/**\/$/
addcmddirparam	zle_tricky.c	/^void addcmddirparam(s,t) \/**\/$/
addcmdmatch	zle_tricky.c	/^void addcmdmatch(s,t) \/**\/$/
addcmdnodis	zle_tricky.c	/^void addcmdnodis(s,t) \/**\/$/
addenv	params.c	/^char *addenv(name,value) \/**\/$/
addfd	exec.c	/^void addfd(forked,save,mfds,fd1,fd2,rflag) \/**\/$/
addhcmdnode	table.c	/^void addhcmdnode(nam,pnam) \/**\/$/
addmatch	zle_tricky.c	/^void addmatch(s) \/**\/$/
addnodeinorder	table.c	/^void addnodeinorder(x,dat) \/**\/$/
addpath	glob.c	/^static int addpath(s)$/
addproc	jobs.c	/^struct process *addproc(pid,text) \/**\/$/
addreswords	init.c	/^void addreswords() \/**\/$/
addundo	zle_utils.c	/^void addundo() \/**\/$/
adduserdir	utils.c	/^void adduserdir(s,t) \/**\/$/
addvars	exec.c	/^void addvars(l,export) \/**\/$/
adjustwinsize	utils.c	/^void adjustwinsize() \/**\/$/
ainit	init.c	/^void ainit() \/**\/$/
allocnode	utils.c	/^vptr allocnode(type) \/**\/$/
arithsubst	subst.c	/^void arithsubst(aptr,bptr) \/**\/$/
arrdup	utils.c	/^char **arrdup(s) \/**\/$/
arrfixenv	params.c	/^void arrfixenv(s,t) \/**\/$/
arrgetfn	params.c	/^char **arrgetfn(pm) \/**\/$/
arrlen	utils.c	/^int arrlen(s) \/**\/$/
arrsetfn	params.c	/^void arrsetfn(pm,x) \/**\/$/
arrvargetfn	params.c	/^char **arrvargetfn(pm) \/**\/$/
arrvarsetfn	params.c	/^void arrvarsetfn(pm,x) \/**\/$/
attachtty	utils.c	/^void attachtty(pgrp) \/**\/$/
backdel	zle_utils.c	/^void backdel(ct) \/**\/$/
backkill	zle_utils.c	/^void backkill(ct,dir) \/**\/$/
backwardchar	zle_move.c	/^void backwardchar() \/**\/$/
backwarddeletechar	zle_misc.c	/^void backwarddeletechar() \/**\/$/
backwarddeleteword	zle_word.c	/^void backwarddeleteword() \/**\/$/
backwardkillline	zle_misc.c	/^void backwardkillline() \/**\/$/
backwardkillword	zle_word.c	/^void backwardkillword() \/**\/$/
backwardword	zle_word.c	/^void backwardword() \/**\/$/
beginningofbufferorhistory	zle_hist.c	/^void beginningofbufferorhistory() \/**\/$/
beginningofhistory	zle_hist.c	/^void beginningofhistory() \/**\/$/
beginningofline	zle_move.c	/^void beginningofline() \/**\/$/
beginningoflinehist	zle_move.c	/^void beginningoflinehist() \/**\/$/
bin_alias	builtin.c	/^int bin_alias(name,argv,ops,func) \/**\/$/
bin_bindkey	zle_main.c	/^int bin_bindkey(name,argv,ops,junc) \/**\/$/
bin_break	builtin.c	/^int bin_break(name,argv,ops,func) \/**\/$/
bin_cd	builtin.c	/^int bin_cd(nam,argv,ops,func) \/**\/$/
bin_colon	builtin.c	/^int bin_colon(name,argv,ops,whocares) \/**\/$/
bin_compctl	builtin.c	/^int bin_compctl(name,argv,ops,func) \/**\/$/
bin_dirs	builtin.c	/^int bin_dirs(name,argv,ops,func) \/**\/$/
bin_disable	builtin.c	/^int bin_disable(name,argv,ops,func) \/**\/$/
bin_dot	builtin.c	/^int bin_dot(name,argv,ops,func) \/**\/$/
bin_echotc	builtin.c	/^int bin_echotc(name,argv,ops,func) \/**\/$/
bin_enable	builtin.c	/^int bin_enable(name,argv,ops,whocares) \/**\/$/
bin_eval	builtin.c	/^int bin_eval(nam,argv,ops,func) \/**\/$/
bin_fc	builtin.c	/^int bin_fc(nam,argv,ops,func) \/**\/$/
bin_fg	builtin.c	/^int bin_fg(name,argv,ops,func) \/**\/$/
bin_getopts	builtin.c	/^int bin_getopts(name,argv,ops,func) \/**\/$/
bin_hash	builtin.c	/^int bin_hash(name,argv,ops,func) \/**\/$/
bin_kill	builtin.c	/^int bin_kill(nam,argv,ops,func) \/**\/$/
bin_let	builtin.c	/^int bin_let(name,argv,ops,func) \/**\/$/
bin_limit	builtin.c	/^int bin_limit(nam,argv,ops,func) \/**\/$/
bin_log	watch.c	/^int bin_log(nam,argv,ops,func) \/**\/$/
bin_print	builtin.c	/^int bin_print(name,args,ops,func) \/**\/$/
bin_pwd	builtin.c	/^int bin_pwd(name,argv,ops,func) \/**\/$/
bin_read	builtin.c	/^int bin_read(name,args,ops,func) \/**\/$/
bin_rehash	builtin.c	/^int bin_rehash(name,argv,ops,func) \/**\/$/
bin_sched	builtin.c	/^int bin_sched(nam,argv,ops,func) \/**\/$/
bin_set	builtin.c	/^int bin_set(name,argv,ops,func) \/**\/$/
bin_setopt	builtin.c	/^int bin_setopt(nam,args,ops,isun) \/**\/$/
bin_suspend	builtin.c	/^int bin_suspend(name,argv,ops,func) \/**\/$/
bin_test	builtin.c	/^int bin_test(name,argv,ops,func) \/**\/$/
bin_times	builtin.c	/^int bin_times(name,argv,ops,func) \/**\/$/
bin_trap	builtin.c	/^int bin_trap(name,argv,ops,func) \/**\/$/
bin_ttyctl	builtin.c	/^int bin_ttyctl(name,argv,ops,func) \/**\/$/
bin_typeset	builtin.c	/^int bin_typeset(name,argv,ops,func) \/**\/$/
bin_ulimit	builtin.c	/^int bin_ulimit(name,argv,ops,func) \/**\/$/
bin_umask	builtin.c	/^int bin_umask(nam,args,ops,func) \/**\/$/
bin_unalias	builtin.c	/^int bin_unalias(name,argv,ops,func) \/**\/$/
bin_unhash	builtin.c	/^int bin_unhash(name,argv,ops,func) \/**\/$/
bin_unlimit	builtin.c	/^int bin_unlimit(nam,argv,ops,func) \/**\/$/
bin_unset	builtin.c	/^int bin_unset(name,argv,ops,func) \/**\/$/
bin_vared	builtin.c	/^int bin_vared(name,args,ops,func) \/**\/$/
bin_whence	builtin.c	/^int bin_whence(nam,argv,ops,func) \/**\/$/
bindcmdssetfn	params.c	/^void bindcmdssetfn(pm,x) \/**\/$/
bop	math.c	/^void bop(tk) \/**\/$/
breakread	zle_main.c	/^breakread(fd, buf, n)$/
cancd	exec.c	/^int cancd(s) \/**\/$/
cancd2	exec.c	/^int cancd2(s) \/**\/$/
capitalizeword	zle_word.c	/^void capitalizeword() \/**\/$/
catproc	exec.c	/^void catproc(mn) \/**\/$/
cd_do_chdir	builtin.c	/^char *cd_do_chdir(cnam,dest) \/**\/$/
cd_get_dest	builtin.c	/^char *cd_get_dest(nam,argv,ops,func) \/**\/$/
cd_new_pwd	builtin.c	/^void cd_new_pwd(func,s) \/**\/$/
cd_try_chdir	builtin.c	/^char *cd_try_chdir(pfix,dest) \/**\/$/
checkjobs	jobs.c	/^void checkjobs() \/**\/$/
checkmailpath	utils.c	/^void checkmailpath(s) \/**\/$/
checkrmall	utils.c	/^int checkrmall(s) \/**\/$/
chuck	table.c	/^void chuck(str) \/**\/$/
clearalstack	hist.c	/^void clearalstack() \/**\/$/
clearjobtab	jobs.c	/^void clearjobtab() \/**\/$/
clearscreen	zle_refresh.c	/^void clearscreen() \/**\/$/
closeallelse	exec.c	/^void closeallelse(mn) \/**\/$/
closem	exec.c	/^void closem() \/**\/$/
closemn	exec.c	/^void closemn(mfds,fd) \/**\/$/
closemnodes	exec.c	/^void closemnodes(mfds) \/**\/$/
colonarrgetfn	params.c	/^char *colonarrgetfn(pm) \/**\/$/
colonarrsetfn	params.c	/^void colonarrsetfn(pm,x) \/**\/$/
colonjoin	utils.c	/^char *colonjoin(s) \/**\/$/
colonsplit	utils.c	/^char **colonsplit(s) \/**\/$/
commsubst	subst.c	/^void commsubst(l,n,str3,str,qt) \/**\/$/
compctl_process	builtin.c	/^void compctl_process(s,mask,uk) \/**\/$/
compctlsetup	init.c	/^void compctlsetup() \/**\/$/
completeword	zle_tricky.c	/^void completeword() \/**\/$/
convamps	hist.c	/^char *convamps(out,in) \/**\/$/
convbase	params.c	/^void convbase(s,v,base) \/**\/$/
convertwd	builtin.c	/^void convertwd(s,t,off) \/**\/$/
copyprevword	zle_misc.c	/^void copyprevword() \/**\/$/
copyregionaskill	zle_misc.c	/^void copyregionaskill() \/**\/$/
countnodes	table.c	/^int countnodes(x) \/**\/$/
createparam	params.c	/^struct param *createparam(name,value,flags) \/**\//
ctxtlex	lex.c	/^void ctxtlex() \/**\/$/
cut	zle_utils.c	/^void cut(i,ct,dir) \/**\/$/
dashgetfn	params.c	/^char *dashgetfn(pm) \/**\/$/
ddifftime	utils.c	/^int ddifftime(t1,t2) \/**\/$/
delenv	params.c	/^void delenv(x) \/**\/$/
deletechar	zle_misc.c	/^void deletechar() \/**\/$/
deletecharorlist	zle_tricky.c	/^void deletecharorlist() \/**\/$/
deleteword	zle_word.c	/^void deleteword() \/**\/$/
digitargument	zle_misc.c	/^void digitargument() \/**\/$/
dircmp	utils.c	/^int dircmp(s,t) \/**\/$/
dirname	zle_tricky.c	/^char *dirname(s)$/
do_ambig_menu	zle_tricky.c	/^void do_ambig_menu(s) \/**\/$/
do_ambiguous	zle_tricky.c	/^void do_ambiguous(s) \/**\/$/
do_fignore	zle_tricky.c	/^void do_fignore(origstr) \/**\/$/
do_menucmp	zle_tricky.c	/^void do_menucmp(lst) \/**\/$/
do_single	zle_tricky.c	/^void do_single(s) \/**\/$/
doaccess	cond.c	/^int doaccess(s,c) \/**\/$/
docomplete	zle_tricky.c	/^void docomplete(lst) \/**\/$/
docompletion	zle_tricky.c	/^void docompletion(s,lst,incmd) \/**\/$/
doesmatch	glob.c	/^int doesmatch(c) \/**\/$/
doexpandhist	zle_tricky.c	/^int doexpandhist() \/**\/$/
doexpansion	zle_tricky.c	/^void doexpansion(s,lst,lincmd) \/**\/$/
doisearch	zle_hist.c	/^void doisearch(dir) \/**\/$/
dolstat	cond.c	/^unsigned short dolstat(s) \/**\/$/
domatch	glob.c	/^int domatch(str,c,fist) \/**\/$/
dontclob	exec.c	/^int dontclob(f) \/**\/$/
doshfunc	exec.c	/^void doshfunc(list,args,flags) \/**\/$/
doshfuncnoval	exec.c	/^void doshfuncnoval(list,args,flags) \/**\/$/
dostat	cond.c	/^unsigned short dostat(s) \/**\/$/
dotrap	utils.c	/^void dotrap(sig) \/**\/$/
dowatch	watch.c	/^void dowatch() \/**\/$/
downcase	hist.c	/^void downcase(x) \/**\/$/
downcaseword	zle_word.c	/^void downcaseword() \/**\/$/
downhistory	zle_hist.c	/^void downhistory() \/**\/$/
downlineorhistory	zle_hist.c	/^void downlineorhistory() \/**\/$/
downlineorsearch	zle_hist.c	/^void downlineorsearch() \/**\/$/
drainoutput	zle_main.c	/^void drainoutput() \/**\/$/
dstackent	subst.c	/^char *dstackent(val) \/**\/$/
dumptime	jobs.c	/^void dumptime(jn) \/**\/$/
duplist	utils.c	/^Lklist duplist(l,func) \/**\/$/
dupstruct	utils.c	/^vptr dupstruct(a) \/**\/$/
dyncat	glob.c	/^char *dyncat(s1,s2) \/**\/$/
dynread	subst.c	/^char *dynread(stop) \/**\/$/
emacsbackwardword	zle_word.c	/^void emacsbackwardword() \/**\/$/
emacsforwardword	zle_word.c	/^void emacsforwardword() \/**\/$/
endofbufferorhistory	zle_hist.c	/^void endofbufferorhistory() \/**\/$/
endofhistory	zle_hist.c	/^void endofhistory() \/**\/$/
endofline	zle_move.c	/^void endofline() \/**\/$/
endoflinehist	zle_move.c	/^void endoflinehist() \/**\/$/
entersubsh	exec.c	/^void entersubsh(bkg) \/**\/$/
equalsplit	utils.c	/^int equalsplit(s,t) \/**\/$/
errnogetfn	params.c	/^long errnogetfn(pm) \/**\/$/
escsubst	builtin.c	/^char *escsubst(s,nnl) \/**\/$/
evalcond	cond.c	/^int evalcond(c) \/**\/$/
exalias	lex.c	/^int exalias() \/**\/$/
exchangepointandmark	zle_move.c	/^void exchangepointandmark() \/**\/$/
execbin	builtin.c	/^int execbin(args,cnode) \/**\/$/
execcase	loop.c	/^int execcase(cmd) \/**\/$/
execcmd	exec.c	/^void execcmd(cmd,input,output,bkg,last1) \/**\/$/
execcond	exec.c	/^int execcond(cmd) \/**\/$/
execcursh	exec.c	/^int execcursh(cmd) \/**\/$/
execerr	exec.c	/^#define execerr() { if (forked) _exit(1); \\$/
execfor	loop.c	/^int execfor(cmd) \/**\/$/
execfuncdef	exec.c	/^int execfuncdef(cmd) \/**\/$/
execif	loop.c	/^int execif(cmd) \/**\/$/
execlist	exec.c	/^void execlist(list) \/**\/$/
execlist2	exec.c	/^void execlist2(list,type,last1) \/**\/$/
execok	jobs.c	/^int execok() \/**\/$/
execpline	exec.c	/^int execpline(l,how,last1) \/**\/$/
execpline2	exec.c	/^void execpline2(pline,how,input,output,last1) \/**/
execrepeat	loop.c	/^int execrepeat(cmd) \/**\/$/
execselect	loop.c	/^int execselect(cmd) \/**\/$/
execshfunc	exec.c	/^void execshfunc(cmd,cn) \/**\/$/
execstring	exec.c	/^void execstring(s) \/**\/$/
exectime	exec.c	/^int exectime(cmd) \/**\/$/
execute	exec.c	/^void execute(dash) \/**\/$/
executenamedcommand	zle_misc.c	/^int executenamedcommand() \/**\/$/
execwhile	loop.c	/^int execwhile(cmd) \/**\/$/
exists	glob.c	/^#define exists(X) (access(X,0) == 0 || readlink(X,/
expandcmdpath	zle_tricky.c	/^void expandcmdpath() \/**\/$/
expandhistory	zle_tricky.c	/^void expandhistory() \/**\/$/
expandhtab	table.c	/^void expandhtab(ht) \/**\/$/
expandorcomplete	zle_tricky.c	/^void expandorcomplete() \/**\/$/
expandword	zle_tricky.c	/^void expandword() \/**\/$/
fcedit	builtin.c	/^int fcedit(ename,fn) \/**\/$/
fcgetcomm	builtin.c	/^int fcgetcomm(s) \/**\/$/
fclist	builtin.c	/^int fclist(f,n,r,D,d,first,last,subs) \/**\/$/
fcsubs	builtin.c	/^int fcsubs(sp,sub) \/**\/$/
feep	utils.c	/^void feep() \/**\/$/
filesub	subst.c	/^int filesub(namptr) \/**\/$/
findbol	zle_utils.c	/^int findbol() \/**\/$/
findcmd	exec.c	/^char *findcmd(arg0) \/**\/$/
finddir	utils.c	/^int finddir(s) \/**\/$/
findeol	zle_utils.c	/^int findeol() \/**\/$/
findjobnam	builtin.c	/^int findjobnam(s) \/**\/$/
findline	zle_utils.c	/^void findline(a,b) \/**\/$/
findproc	jobs.c	/^void findproc(pid,jptr,pptr) \/**\/$/
findpwd	utils.c	/^char *findpwd(s) \/**\/$/
firsthist	hist.c	/^int firsthist() \/**\/$/
fixcline	exec.c	/^void fixcline(l) \/**\/$/
fixdir	builtin.c	/^int fixdir(d,s) \/**\/$/
fixfds	exec.c	/^void fixfds(save) \/**\/$/
fixpwd	utils.c	/^char *fixpwd(s) \/**\/$/
fixsigs	jobs.c	/^void fixsigs() \/**\/$/
foredel	zle_utils.c	/^void foredel(ct) \/**\/$/
forekill	zle_utils.c	/^void forekill(ct,dir) \/**\/$/
forstrcmp	glob.c	/^int forstrcmp(a,b) \/**\/$/
forwardchar	zle_move.c	/^void forwardchar() \/**\/$/
forwardword	zle_word.c	/^void forwardword() \/**\/$/
fprintdir	utils.c	/^void fprintdir(s, f) \/**\/$/
freeanode	utils.c	/^void freeanode(a) \/**\/$/
freearray	utils.c	/^void freearray(s) \/**\/$/
freecmdnam	utils.c	/^void freecmdnam(a) \/**\/$/
freecompctl	utils.c	/^void freecompctl(a) \/**\/$/
freeh	mem.c	/^void freeh(h) \/**\/$/
freeheap	mem.c	/^void freeheap() \/**\/$/
freehtab	table.c	/^void freehtab(ht,freefunc) \/**\/$/
freekey	zle_main.c	/^void freekey(x) \/**\/$/
freemenu	zle_tricky.c	/^void freemenu() \/**\/$/
freepm	utils.c	/^void freepm(a) \/**\/$/
freestr	utils.c	/^void freestr(a) \/**\/$/
freestruct	utils.c	/^void freestruct(a) \/**\/$/
freetable	table.c	/^void freetable(tab,freefunc) \/**\/$/
freeundo	zle_utils.c	/^void freeundo() \/**\/$/
fset	builtin.c	/^#define fset(X) (flags & X)$/
fullhash	exec.c	/^void fullhash() \/**\/$/
gen_matches_glob	zle_tricky.c	/^void gen_matches_glob(s,incmd) \/**\/$/
gen_matches_reg	zle_tricky.c	/^void gen_matches_reg(s,incmd,regfiles) \/**\/$/
get_baudrate	init.c	/^get_baudrate(speedcode)$/
get_comp_string	zle_tricky.c	/^char *get_comp_string() \/**\/$/
get_user_var	zle_tricky.c	/^char **get_user_var(nam) \/**\/$/
getaparam	params.c	/^char **getaparam(s) \/**\/$/
getargc	hist.c	/^int getargc(list) \/**\/$/
getargs	hist.c	/^char *getargs(elist,arg1,arg2) \/**\/$/
getargspec	hist.c	/^int getargspec(argc,marg) \/**\/$/
getarrvalue	params.c	/^char **getarrvalue(v) \/**\/$/
getasg	builtin.c	/^struct asgment *getasg(s) \/**\/$/
getcurcmd	zle_tricky.c	/^char *getcurcmd() \/**\/$/
getevent	hist.c	/^char *getevent(ev) \/**\/$/
getfdstr	parse.c	/^int getfdstr(s) \/**\/$/
getfpfunc	exec.c	/^List getfpfunc(s) \/**\/$/
getfreejob	jobs.c	/^int getfreejob() \/**\/$/
getfullpath	glob.c	/^char *getfullpath(s) \/**\/$/
gethere	exec.c	/^char *gethere(str,typ) \/**\/$/
getherestr	exec.c	/^int getherestr(fn) \/**\/$/
gethnode	table.c	/^vptr gethnode(nam,ht) \/**\/$/
gethome	subst.c	/^char *gethome(user,len) \/**\/$/
gethostname	utils.c	/^int gethostname(nameptr, maxlength)$/
getinpipe	exec.c	/^int getinpipe(cmd) \/**\/$/
getinproc	exec.c	/^char *getinproc(cmd) \/**\/$/
getintvalue	params.c	/^long getintvalue(v) \/**\/$/
getiparam	params.c	/^long getiparam(s) \/**\/$/
getjob	builtin.c	/^int getjob(s,prog) \/**\/$/
getjobtext	text.c	/^char *getjobtext(n) \/**\/$/
getkey	zle_main.c	/^unsigned int getkey(tmok) \/**\/$/
getkeycmd	zle_main.c	/^int getkeycmd() \/**\/$/
getkeystring	zle_main.c	/^char *getkeystring(s,len) \/**\/$/
getline	zle_hist.c	/^void getline() \/**\/$/
getlineleng	utils.c	/^int getlineleng() \/**\/$/
getlogtime	watch.c	/^time_t getlogtime(u,inout) \/**\/$/
getmatch	glob.c	/^void getmatch(sp,pat,dd) \/**\/$/
getnode	table.c	/^vptr getnode(list) \/**\/$/
getoutpipe	exec.c	/^int getoutpipe(cmd) \/**\/$/
getoutproc	exec.c	/^char *getoutproc(cmd) \/**\/$/
getoutput	exec.c	/^Lklist getoutput(cmd,qt) \/**\/$/
getoutputfile	exec.c	/^char *getoutputfile(cmd) \/**\/$/
getparamtype	params.c	/^int getparamtype(s,l) \/**\/$/
getparen	glob.c	/^char *getparen(str) \/**\/$/
getpermtext	text.c	/^char *getpermtext(n) \/**\/$/
getquery	utils.c	/^int getquery() \/**\/$/
getredirs	text.c	/^void getredirs(cmd) \/**\/$/
getshfunc	utils.c	/^List getshfunc(nam) \/**\/$/
getsignum	builtin.c	/^int getsignum(s) \/**\/$/
getsimptext	text.c	/^void getsimptext(cmd) \/**\/$/
getsparam	params.c	/^char *getsparam(s) \/**\/$/
getsparamval	params.c	/^char *getsparamval(s,l) \/**\/$/
getstat	cond.c	/^struct stat *getstat(s) \/**\/$/
getstrvalue	params.c	/^char *getstrvalue(v) \/**\/$/
gettemp	exec.c	/^char *gettemp() \/**\/$/
gettext2	text.c	/^void gettext2(n) \/**\/$/
gettok	lex.c	/^int gettok() \/**\/$/
gettygrp	utils.c	/^long gettygrp() \/**\/$/
gettyinfo	utils.c	/^void gettyinfo(ti) \/**\/$/
getvalue	params.c	/^Value getvalue(pptr,bracks) \/**\/$/
getvar	math.c	/^long getvar(s)$/
getvirange	zle_vi.c	/^int getvirange(wf) \/**\/$/
getvisrchstr	zle_hist.c	/^int getvisrchstr() \/**\/$/
gidgetfn	params.c	/^long gidgetfn(pm) \/**\/$/
glob	glob.c	/^void glob(list,np) \/**\/$/
gosmacstransposechars	zle_misc.c	/^void gosmacstransposechars() \/**\/$/
gotword	zle_tricky.c	/^void gotword(s) \/**\/$/
gt2	text.c	/^#define gt2(X) gettext2((struct node *) (X))$/
habort	hist.c	/^#define habort() { errflag = lexstop = 1; return '/
halloc	mem.c	/^vptr halloc(size) \/**\/$/
handler	jobs.c	/^HANDTYPE handler(sig) \/**\/$/
hasbraces	glob.c	/^int hasbraces(str) \/**\/$/
hashcmd	exec.c	/^int hashcmd(arg0,pp) \/**\/$/
hasher	table.c	/^int hasher(s) \/**\/$/
haswilds	glob.c	/^int haswilds(str) \/**\/$/
hbegin	hist.c	/^void hbegin() \/**\/$/
hcalloc	mem.c	/^vptr hcalloc(size) \/**\/$/
hcomsearch	hist.c	/^int hcomsearch(str) \/**\/$/
hconsearch	hist.c	/^int hconsearch(str,marg) \/**\/$/
hdynread	hist.c	/^char *hdynread(stop) \/**\/$/
hdynread2	hist.c	/^char *hdynread2(stop) \/**\/$/
heapalloc	mem.c	/^void heapalloc() \/**\/$/
hend	hist.c	/^int hend() \/**\/$/
herrflush	hist.c	/^void herrflush() \/**\/$/
hflush	hist.c	/^void hflush() \/**\/$/
hgetc	hist.c	/^int hgetc() \/**\/$/
hgetch	hist.c	/^int hgetch() \/**\/$/
hgets	hist.c	/^char *hgets(buf, n) \/**\/$/
histcharsgetfn	params.c	/^char *histcharsgetfn(pm) \/**\/$/
histcharssetfn	params.c	/^void histcharssetfn(pm,x) \/**\/$/
historyincrementalsearchbackward	zle_hist.c	/^void historyincrementalsearchbackward() \/**\/$/
historyincrementalsearchforward	zle_hist.c	/^void historyincrementalsearchforward() \/**\/$/
historysearchbackward	zle_hist.c	/^void historysearchbackward() \/**\/$/
historysearchforward	zle_hist.c	/^void historysearchforward() \/**\/$/
histsizegetfn	params.c	/^long histsizegetfn(pm) \/**\/$/
histsizesetfn	params.c	/^void histsizesetfn(pm,v) \/**\/$/
hnamcmp	builtin.c	/^static int hnamcmp(a,b)$/
holdintr	utils.c	/^void holdintr() \/**\/$/
homegetfn	params.c	/^char *homegetfn(pm) \/**\/$/
homesetfn	params.c	/^void homesetfn(pm,x) \/**\/$/
hostcmdssetfn	params.c	/^void hostcmdssetfn(pm,x) \/**\/$/
hostgetfn	params.c	/^char *hostgetfn(pm) \/**\/$/
hp_alloc	hist.c	/^char *hp_alloc(hp,siz) \/**\/$/
hp_concat	hist.c	/^char *hp_concat(old,new) \/**\/$/
hp_free	hist.c	/^void hp_free(h,ptr,siz) \/**\/$/
hp_purge	hist.c	/^void hp_purge(h,lim) \/**\/$/
hp_realloc	hist.c	/^char *hp_realloc(hp,ptr,oldsiz,newsiz) \/**\/$/
hrealloc	mem.c	/^vptr hrealloc(p,old,new) \/**\/$/
hstrcmp	zle_utils.c	/^int hstrcmp(s,t) \/**\/$/
hstrncmp	zle_utils.c	/^int hstrncmp(s,t,len) \/**\/$/
hstrnstr	zle_utils.c	/^char *hstrnstr(s,t,len) \/**\/$/
hungetc	hist.c	/^void hungetc(c) \/**\/$/
hungetch	hist.c	/^void hungetch(c) \/**\/$/
hungets	hist.c	/^void hungets(str) \/**\/$/
hwadd	hist.c	/^char *hwadd() \/**\/$/
hwaddc	hist.c	/^void hwaddc(c) \/**\/$/
hwbegin	hist.c	/^void hwbegin() \/**\/$/
ifsgetfn	params.c	/^char *ifsgetfn(pm) \/**\/$/
ifssetfn	params.c	/^void ifssetfn(pm,x) \/**\/$/
inarray	zle_tricky.c	/^int inarray(s,a) \/**\/$/
infernexthistory	zle_hist.c	/^void infernexthistory() \/**\/$/
inithist	hist.c	/^void inithist() \/**\/$/
initialize	init.c	/^void initialize() \/**\/$/
initjob	jobs.c	/^void initjob() \/**\/$/
initlextabs	lex.c	/^void initlextabs() \/**\/$/
inittty	hist.c	/^void inittty() \/**\/$/
inittyptab	utils.c	/^void inittyptab() \/**\/$/
initundo	zle_utils.c	/^void initundo() \/**\/$/
initxbindtab	zle_main.c	/^void initxbindtab() \/**\/$/
insert	glob.c	/^void insert(s) \/**\/$/
insertlastword	zle_hist.c	/^void insertlastword() \/**\/$/
inslist	table.c	/^void inslist(l,where,x) \/**\/$/
insnode	table.c	/^void insnode(list,llast,dat) \/**\/$/
inststr	zle_tricky.c	/^#define inststr(X) inststrlen((X),-1)$/
inststrlen	zle_tricky.c	/^void inststrlen(s,l) \/**\/$/
int	glob.c	/^static int (*qualfuncs[QUALCT])DCLPROTO((struct st/
intgetfn	params.c	/^long intgetfn(pm) \/**\/$/
intr	utils.c	/^void intr() \/**\/$/
intsetfn	params.c	/^void intsetfn(pm,x) \/**\/$/
intvargetfn	params.c	/^long intvargetfn(pm) \/**\/$/
intvarsetfn	params.c	/^void intvarsetfn(pm,x) \/**\/$/
isanum	builtin.c	/^int isanum(s) \/**\/$/
isbrace	subst.c	/^#define	isbrace(c)	(c == '{' || c == Inbrace)$/
iscom	exec.c	/^int iscom(s) \/**\/$/
isdir	zle_tricky.c	/^int isdir(t,s) \/**\/$/
isident	params.c	/^int isident(s) \/**\/$/
islink	utils.c	/^int islink(s) \/**\/$/
ispwd	utils.c	/^int ispwd(s) \/**\/$/
isrelative	exec.c	/^int isrelative(s) \/**\/$/
isstring	subst.c	/^#define	isstring(c)	(c == '$' || c == String || c /
join	utils.c	/^char *join(arr,delim) \/**\/$/
killbuffer	zle_misc.c	/^void killbuffer() \/**\/$/
killjb	jobs.c	/^int killjb(jn,sig) \/**\/$/
killline	zle_misc.c	/^void killline() \/**\/$/
killregion	zle_misc.c	/^void killregion() \/**\/$/
killrunjobs	jobs.c	/^void killrunjobs() \/**\/$/
killwholeline	zle_misc.c	/^void killwholeline() \/**\/$/
killword	zle_word.c	/^void killword() \/**\/$/
lastalloc	mem.c	/^void lastalloc() \/**\/$/
lexinit	lex.c	/^void lexinit() \/**\/$/
lexrestore	lex.c	/^void lexrestore() \/**\/$/
lexsave	lex.c	/^void lexsave() \/**\/$/
listchoices	zle_tricky.c	/^void listchoices() \/**\/$/
listexpand	zle_tricky.c	/^void listexpand() \/**\/$/
listhtable	builtin.c	/^void listhtable(ht,func) \/**\/$/
listmatches	zle_tricky.c	/^void listmatches(l,apps) \/**\/$/
lithistsizegetfn	params.c	/^long lithistsizegetfn(pm) \/**\/$/
lithistsizesetfn	params.c	/^void lithistsizesetfn(pm,v) \/**\/$/
loop	init.c	/^void loop(toplevel) \/**\/$/
magicspace	zle_tricky.c	/^void magicspace() \/**\/$/
mailchecksetfn	params.c	/^void mailchecksetfn(pm,x) \/**\/$/
make_casecmd	parse.c	/^#define make_casecmd() allocnode(N_CASE)$/
make_cmd	parse.c	/^#define make_cmd() allocnode(N_CMD)$/
make_cond	parse.c	/^#define make_cond() allocnode(N_COND)$/
make_forcmd	parse.c	/^#define make_forcmd() allocnode(N_FOR)$/
make_ifcmd	parse.c	/^#define make_ifcmd() allocnode(N_IF)$/
make_list	parse.c	/^#define make_list() allocnode(N_LIST)$/
make_pline	parse.c	/^#define make_pline() allocnode(N_PLINE)$/
make_sublist	parse.c	/^#define make_sublist() allocnode(N_SUBLIST)$/
make_varnode	parse.c	/^#define make_varnode() allocnode(N_VARASG)$/
make_whilecmd	parse.c	/^#define make_whilecmd() allocnode(N_WHILE)$/
makecline	exec.c	/^char **makecline(list) \/**\/$/
makecond	builtin.c	/^#define makecond() allocnode(N_COND)$/
makefunckey	zle_main.c	/^Key makefunckey(fun) \/**\/$/
makehstr	hist.c	/^char *makehstr(s) \/**\/$/
makelowercase	hist.c	/^int makelowercase(junkptr) \/**\/$/
makequote	zle_misc.c	/^char *makequote(s) \/**\/$/
makerunning	jobs.c	/^void makerunning(jn) \/**\/$/
maketildelist	zle_tricky.c	/^void maketildelist(s) \/**\/$/
makeuppercase	hist.c	/^int makeuppercase(junkptr) \/**\/$/
match_username	zle_tricky.c	/^static int match_username(status, key, keylen, val/
matchpat	glob.c	/^int matchpat(a,b) \/**\/$/
matheval	math.c	/^long matheval(s) \/**\/$/
mathevalarg	math.c	/^long mathevalarg(s,ss) \/**\/$/
mathevall	math.c	/^long mathevall(s,prek,ep) \/**\/$/
mathparse	math.c	/^void mathparse(pc) \/**\/$/
meminit	mem.c	/^void meminit() \/**\/$/
menucompleteword	zle_tricky.c	/^void menucompleteword() \/**\/$/
menuexpandorcomplete	zle_tricky.c	/^void menuexpandorcomplete() \/**\/$/
mindist	utils.c	/^int mindist(dir,guess,best) \/**\/$/
minimatch	glob.c	/^int minimatch(pat,str) \/**\/$/
mkanode	subst.c	/^struct alias *mkanode(txt,cmflag) \/**\/$/
mkarray	utils.c	/^char **mkarray(s) \/**\/$/
mkenvstr	params.c	/^char *mkenvstr(x,y) \/**\/$/
modify	subst.c	/^void modify(str,ptr) \/**\/$/
movefd	utils.c	/^int movefd(fd) \/**\/$/
moveto	zle_refresh.c	/^void moveto(ln,cl) \/**\/$/
mpipe	exec.c	/^void mpipe(pp) \/**\/$/
namedpipe	exec.c	/^char *namedpipe() \/**\/$/
negargument	zle_misc.c	/^void negargument() \/**\/$/
new	params.c	/^#define new(X) (X=(vptr)alloc(sizeof(*(X))))$/
newcmdnamtab	utils.c	/^void newcmdnamtab() \/**\/$/
newhtable	table.c	/^Hashtab newhtable(size) \/**\/$/
newlist	table.c	/^Lklist newlist() \/**\/$/
niceprint	builtin.c	/^void niceprint(s) \/**\/$/
niceprintf	builtin.c	/^void niceprintf(s,f) \/**\/$/
niceputc	utils.c	/^void niceputc(c,f) \/**\/$/
noholdintr	utils.c	/^void noholdintr() \/**\/$/
nolval	math.c	/^#define nolval() {stack[sp].lval= -1;}$/
notstrcmp	glob.c	/^int notstrcmp(a,b) \/**\/$/
notzero	math.c	/^int notzero(a) \/**\/$/
nstrdup	subst.c	/^vptr nstrdup(s) \/**\/$/
nullgetfn	params.c	/^char **nullgetfn(pm) \/**\/$/
nullsetfn	params.c	/^void nullsetfn(pm,x) \/**\/$/
op	math.c	/^void op(what) \/**\/$/
optcmdssetfn	params.c	/^void optcmdssetfn(pm,x) \/**\/$/
optison	cond.c	/^int optison(s) \/**\/$/
optlookup	builtin.c	/^int optlookup(s) \/**\/$/
overwritemode	zle_misc.c	/^void overwritemode() \/**\/$/
par_case	parse.c	/^void par_case(c) \/**\/$/
par_cmd	parse.c	/^Cmd par_cmd() \/**\/$/
par_cond	parse.c	/^Cond par_cond() \/**\/$/
par_cond_1	parse.c	/^Cond par_cond_1() \/**\/$/
par_cond_2	parse.c	/^Cond par_cond_2() \/**\/$/
par_cond_double	parse.c	/^Cond par_cond_double(a,b) \/**\/$/
par_cond_triple	parse.c	/^Cond par_cond_triple(a,b,c) \/**\/$/
par_dinbrack	parse.c	/^void par_dinbrack(c) \/**\/$/
par_event	parse.c	/^List par_event() \/**\/$/
par_for	parse.c	/^void par_for(c) \/**\/$/
par_funcdef	parse.c	/^void par_funcdef(c) \/**\/$/
par_if	parse.c	/^void par_if(c) \/**\/$/
par_list	parse.c	/^List par_list() \/**\/$/
par_list1	parse.c	/^List par_list1() \/**\/$/
par_nl_wordlist	parse.c	/^Lklist par_nl_wordlist() \/**\/$/
par_pline	parse.c	/^Pline par_pline() \/**\/$/
par_redir	parse.c	/^void par_redir(l) \/**\/$/
par_repeat	parse.c	/^void par_repeat(c) \/**\/$/
par_simple	parse.c	/^Cmd par_simple(c) \/**\/$/
par_sublist	parse.c	/^Sublist par_sublist() \/**\/$/
par_sublist2	parse.c	/^Sublist par_sublist2() \/**\/$/
par_subsh	parse.c	/^void par_subsh(c) \/**\/$/
par_time	parse.c	/^void par_time(c) \/**\/$/
par_while	parse.c	/^void par_while(c) \/**\/$/
par_wordlist	parse.c	/^Lklist par_wordlist() \/**\/$/
paramsubst	subst.c	/^void paramsubst(l,n,aptr,bptr,qt) \/**\/$/
parse_event	parse.c	/^List parse_event() \/**\/$/
parse_list	parse.c	/^List parse_list() \/**\/$/
parseargs	init.c	/^void parseargs(argv) \/**\/$/
parsecomp	glob.c	/^Comp parsecomp() \/**\/$/
parsecomplist	glob.c	/^Complist parsecomplist() \/**\/$/
parsecompsw	glob.c	/^Comp parsecompsw() \/**\/$/
parselstring	exec.c	/^List parselstring(s) \/**\/$/
parsepat	glob.c	/^Complist parsepat(str) \/**\/$/
parsereg	glob.c	/^Comp parsereg(str) \/**\/$/
partest	builtin.c	/^Cond partest(level) \/**\/$/
pathagetfn	params.c	/^char **pathagetfn(pm) \/**\/$/
pathasetfn	params.c	/^void pathasetfn(pm,x) \/**\/$/
pathgetfn	params.c	/^char **pathgetfn(pm) \/**\/$/
pathsetfn	params.c	/^void pathsetfn(pm,x) \/**\/$/
patmatch	glob.c	/^int patmatch(ss,tt) \/**\/$/
pdstack	builtin.c	/^static void pdstack()$/
pfxlen	zle_tricky.c	/^int pfxlen(s,t) \/**\/$/
phork	exec.c	/^int phork() \/**\/$/
pop2	math.c	/^#define pop2() { b = stack[sp--].val; a = stack[sp/
pop2lv	math.c	/^#define pop2lv() { pop2() lv = stack[sp+1].lval; }/
pop3	math.c	/^#define pop3() {c=stack[sp--].val;b=stack[sp--].va/
popheap	mem.c	/^void popheap() \/**\/$/
postfork	subst.c	/^void postfork(list,doglob) \/**\/$/
poundgetfn	params.c	/^long poundgetfn(pm) \/**\/$/
poundinsert	zle_misc.c	/^void poundinsert() \/**\/$/
prefix	builtin.c	/^int prefix(s,t) \/**\/$/
prefork	subst.c	/^void prefork(list) \/**\/$/
preprompt	utils.c	/^void preprompt() \/**\/$/
printalias	builtin.c	/^void printalias(s,a) \/**\/$/
printbind	zle_main.c	/^void printbind(s,len) \/**\/$/
printbinding	zle_main.c	/^void printbinding(str,k) \/**\/$/
printcompctl	builtin.c	/^void printcompctl(s,cc) \/**\/$/
printdir	utils.c	/^void printdir(s) \/**\/$/
printdircr	utils.c	/^void printdircr(s) \/**\/$/
printjob	jobs.c	/^void printjob(jn,lng) \/**\/$/
printparam	builtin.c	/^void printparam(s,p) \/**\/$/
printtime	jobs.c	/^void printtime(real,ti,desc) \/**\/$/
printulimit	builtin.c	/^void printulimit(lim,hard) \/**\/$/
processcmd	zle_tricky.c	/^void processcmd() \/**\/$/
prtopt	builtin.c	/^static void prtopt()$/
pshfunc	builtin.c	/^void pshfunc(s,cc) \/**\/$/
pttime	builtin.c	/^#define pttime(X) printf("%dm%ds",(X)\/3600,(X)\/6/
push	math.c	/^void push(val,lval)$/
pushheap	mem.c	/^void pushheap() \/**\/$/
pushline	zle_hist.c	/^void pushline() \/**\/$/
pushv	math.c	/^#define pushv(X) { push(X,-1); }$/
putprompt	zle_misc.c	/^char *putprompt(fm,lenp,isspell) \/**\/$/
putraw	builtin.c	/^int putraw(c) \/**\/$/
putstr	zle_misc.c	/^int putstr(d) \/**\/$/
qgetevent	zle_hist.c	/^char *qgetevent(ev) \/**\/$/
qgetnum	glob.c	/^long qgetnum(s) \/**\/$/
qualdev	glob.c	/^int qualdev(buf,dv) \/**\/$/
qualflags	glob.c	/^int qualflags(buf,mod) \/**\/$/
qualgid	glob.c	/^int qualgid(buf,gid) \/**\/$/
qualiscom	glob.c	/^int qualiscom(buf,mod) \/**\/$/
qualisdev	glob.c	/^int qualisdev(buf,junk) \/**\/$/
qualmode	glob.c	/^int qualmode(buf,mod) \/**\/$/
qualnlink	glob.c	/^int qualnlink(buf,ct) \/**\/$/
qualsize	glob.c	/^int qualsize(buf,size) \/**\/$/
qualtime	glob.c	/^int qualtime(buf,days) \/**\/$/
qualuid	glob.c	/^int qualuid(buf,uid) \/**\/$/
quietgetevent	hist.c	/^char *quietgetevent(ev) \/**\/$/
quote	hist.c	/^int quote(tr) \/**\/$/
quotebreak	hist.c	/^int quotebreak(tr) \/**\/$/
quotedinsert	zle_misc.c	/^void quotedinsert() \/**\/$/
quoteline	zle_misc.c	/^void quoteline() \/**\/$/
quoteregion	zle_misc.c	/^void quoteregion() \/**\/$/
randomgetfn	params.c	/^long randomgetfn(pm) \/**\/$/
randomsetfn	params.c	/^void randomsetfn(pm,v) \/**\/$/
readhistfile	hist.c	/^void readhistfile(s,err) \/**\/$/
readoutput	exec.c	/^Lklist readoutput(in,qt) \/**\/$/
readwtab	watch.c	/^void readwtab() \/**\/$/
redisplay	zle_refresh.c	/^void redisplay() \/**\/$/
redup	utils.c	/^void redup(x,y) \/**\/$/
refresh	zle_refresh.c	/^void refresh() \/**\/$/
refreshline	zle_refresh.c	/^void refreshline(ln) \/**\/$/
rembutext	hist.c	/^int rembutext(junkptr) \/**\/$/
remhist	hist.c	/^void remhist() \/**\/$/
remhnode	table.c	/^vptr remhnode(nam,ht) \/**\/$/
remlpaths	hist.c	/^int remlpaths(junkptr) \/**\/$/
remnode	table.c	/^vptr remnode(list,nd) \/**\/$/
remnulargs	glob.c	/^void remnulargs(s) \/**\/$/
remtext	hist.c	/^int remtext(junkptr) \/**\/$/
remtpath	hist.c	/^int remtpath(junkptr) \/**\/$/
replenv	params.c	/^char *replenv(e,value) \/**\/$/
report	jobs.c	/^int report(j) \/**\/$/
resetvideo	zle_refresh.c	/^void resetvideo() \/**\/$/
resizehistents	hist.c	/^void resizehistents() \/**\/$/
restoretty	utils.c	/^void restoretty() \/**\/$/
reversemenucomplete	zle_tricky.c	/^void reversemenucomplete() \/**\/$/
runlist	exec.c	/^void runlist(l) \/**\/$/
runscripts	init.c	/^void runscripts(zshname) \/**\/$/
sanetty	utils.c	/^void sanetty(ti) \/**\/$/
savehistfile	hist.c	/^void savehistfile(s,err,app) \/**\/$/
saveoldfuncs	utils.c	/^void saveoldfuncs(x,y) \/**\/$/
scanjobs	utils.c	/^void scanjobs() \/**\/$/
scanner	glob.c	/^void scanner(q) \/**\/$/
scrollwindow	zle_refresh.c	/^int scrollwindow() \/**\/$/
secondsgetfn	params.c	/^long secondsgetfn(pm) \/**\/$/
secondssetfn	params.c	/^void secondssetfn(pm,x) \/**\/$/
selectlist	zle_tricky.c	/^void selectlist(l) \/**\/$/
selfinsert	zle_misc.c	/^void selfinsert() \/**\/$/
selfinsertunmeta	zle_misc.c	/^void selfinsertunmeta() \/**\/$/
sendbreak	zle_misc.c	/^void sendbreak() \/**\/$/
sendstring	zle_main.c	/^void sendstring() \/**\/$/
set	math.c	/^#define set(X) { push(setvar(lv,X),lv); }$/
setaparam	params.c	/^Param setaparam(s,val) \/**\/$/
setarrvalue	params.c	/^void setarrvalue(v,val) \/**\/$/
setcbreak	utils.c	/^void setcbreak() \/**\/$/
setflags	init.c	/^void setflags(zshname) \/**\/$/
sethistline	zle_utils.c	/^void sethistline(s) \/**\/$/
setintenv	params.c	/^void setintenv(s,val) \/**\/$/
setintvalue	params.c	/^void setintvalue(v,val) \/**\/$/
setiparam	params.c	/^Param setiparam(s,val) \/**\/$/
setline	zle_utils.c	/^void setline(s) \/**\/$/
setmarkcommand	zle_move.c	/^void setmarkcommand() \/**\/$/
setmoreflags	init.c	/^void setmoreflags() \/**\/$/
setparams	params.c	/^void setparams() \/**\/$/
setprevjob	jobs.c	/^void setprevjob() \/**\/$/
setsparam	params.c	/^Param setsparam(s,val) \/**\/$/
setstrvalue	params.c	/^void setstrvalue(v,val) \/**\/$/
setterm	zle_main.c	/^void setterm() \/**\/$/
settrap	utils.c	/^void settrap(t0,l) \/**\/$/
settyinfo	utils.c	/^void settyinfo(ti) \/**\/$/
setupparams	params.c	/^void setupparams() \/**\/$/
setupvals	init.c	/^void setupvals() \/**\/$/
setvar	math.c	/^long setvar(s,v)$/
shelltime	jobs.c	/^void shelltime() \/**\/$/
showlimits	builtin.c	/^void showlimits(hard,lim) \/**\/$/
simplifyright	utils.c	/^void simplifyright(l) \/**\/$/
singlerefresh	zle_refresh.c	/^void singlerefresh() \/**\/$/
singmoveto	zle_refresh.c	/^void singmoveto(pos) \/**\/$/
singsub	subst.c	/^void singsub(s) \/**\/$/
sizeline	zle_utils.c	/^void sizeline(sz) \/**\/$/
skipcomm	lex.c	/^int skipcomm() \/**\/$/
slashsplit	utils.c	/^char **slashsplit(s) \/**\/$/
source	utils.c	/^int source(s) \/**\/$/
sourcehome	utils.c	/^void sourcehome(s) \/**\/$/
spaceinline	zle_utils.c	/^void spaceinline(ct) \/**\/$/
spacejoin	utils.c	/^char *spacejoin(s) \/**\/$/
spacesplit	utils.c	/^char **spacesplit(s) \/**\/$/
spawnjob	jobs.c	/^void spawnjob() \/**\/$/
spawnpipes	exec.c	/^void spawnpipes(l) \/**\/$/
spckword	utils.c	/^void spckword(s,s2,tptr,cmd,ask) \/**\/$/
spdist	utils.c	/^int spdist(s,t,thresh) \/**\/$/
spellword	zle_tricky.c	/^void spellword() \/**\/$/
spname	utils.c	/^char *spname (oldname) \/**\/$/
spscan	utils.c	/^void spscan(s,junk) \/**\/$/
spscannodis	utils.c	/^void spscannodis(s,cn) \/**\/$/
startvichange	zle_vi.c	/^static void startvichange(im)$/
startvitext	zle_vi.c	/^static void startvitext(im)$/
stradd	zle_misc.c	/^void stradd(d) \/**\/$/
strconstgetfn	params.c	/^char *strconstgetfn(pm) \/**\/$/
strdup	mem.c	/^char *strdup(s) \/**\/$/
streqct	zle_refresh.c	/^int streqct(s,t) \/**\/$/
strgetfn	params.c	/^char *strgetfn(pm) \/**\/$/
strinbeg	hist.c	/^void strinbeg() \/**\/$/
strinend	hist.c	/^void strinend() \/**\/$/
strpfx	zle_tricky.c	/^int strpfx(s,t) \/**\/$/
strsetfn	params.c	/^void strsetfn(pm,x) \/**\/$/
strucpy	utils.c	/^void strucpy(s,t) \/**\/$/
struncpy	utils.c	/^void struncpy(s,t,n) \/**\/$/
strvargetfn	params.c	/^char *strvargetfn(pm) \/**\/$/
strvarnonullsetfn	params.c	/^void strvarnonullsetfn(pm,x) \/**\/$/
strvarsetfn	params.c	/^void strvarsetfn(pm,x) \/**\/$/
stuff	hist.c	/^int stuff(fn) \/**\/$/
subst	hist.c	/^void subst(strptr,in,out,gbal) \/**\/$/
taddchr	text.c	/^void taddchr(c) \/**\/$/
taddint	text.c	/^void taddint(x) \/**\/$/
taddlist	text.c	/^void taddlist(l) \/**\/$/
taddnl	text.c	/^void taddnl() \/**\/$/
taddstr	text.c	/^void taddstr(s) \/**\/$/
tc_delchars	zle_refresh.c	/^#define tc_delchars(X) tcmultout(TCDEL,TCMULTDEL,(/
tc_downcurs	zle_refresh.c	/^void tc_downcurs(ct) \/**\/$/
tc_inschars	zle_refresh.c	/^#define tc_inschars(X) tcmultout(TCINS,TCMULTINS,(/
tc_leftcurs	zle_refresh.c	/^#define tc_leftcurs(X) tcmultout(TCLEFT,TCMULTLEFT/
tc_rightcurs	zle_refresh.c	/^void tc_rightcurs(ct) \/**\/$/
tc_upcurs	zle_refresh.c	/^#define tc_upcurs(X) tcmultout(TCUP,TCMULTUP,(X))$/
tcdelcost	zle_refresh.c	/^#define tcdelcost(X) (tccan(TCMULTDEL) ? tclen[TCM/
tcinscost	zle_refresh.c	/^#define tcinscost(X) (tccan(TCMULTINS) ? tclen[TCM/
tcmultout	zle_refresh.c	/^void tcmultout(cap,multcap,ct) \/**\/$/
tcout	zle_refresh.c	/^void tcout(cap) \/**\/$/
tcoutarg	zle_refresh.c	/^void tcoutarg(cap,arg) \/**\/$/
teeproc	exec.c	/^void teeproc(mn) \/**\/$/
termgetfn	params.c	/^char *termgetfn(pm) \/**\/$/
termsetfn	params.c	/^void termsetfn(pm,x) \/**\/$/
toggleliteralhistory	zle_hist.c	/^void toggleliteralhistory() \/**\/$/
transposechars	zle_misc.c	/^void transposechars() \/**\/$/
transposewords	zle_word.c	/^void transposewords() \/**\/$/
trashzle	zle_refresh.c	/^void trashzle() \/**\/$/
tricat	glob.c	/^char *tricat(s1,s2,s3) \/**\/$/
try	exec.c	/^#define try(X) { if (iscom(X)) return ztrdup(X); }/
tstradd	zle_misc.c	/^#define tstradd(X) \\$/
tulower	utils.c	/^int tulower(c) \/**\/$/
tuupper	utils.c	/^int tuupper(c) \/**\/$/
ucmp	watch.c	/^int ucmp(u,v) \/**\/$/
ugetnode	table.c	/^vptr ugetnode(list) \/**\/$/
uidgetfn	params.c	/^long uidgetfn(pm) \/**\/$/
unadd	lex.c	/^static void unadd()$/
undefinedkey	zle_misc.c	/^void undefinedkey() \/**\/$/
underscoregetfn	params.c	/^char *underscoregetfn(pm) \/**\/$/
undo	zle_misc.c	/^void undo() \/**\/$/
ungetkey	zle_main.c	/^void ungetkey(ch) \/**\/$/
ungetkeys	zle_main.c	/^void ungetkeys(s,len) \/**\/$/
universalargument	zle_misc.c	/^void universalargument() \/**\/$/
unsetcbreak	utils.c	/^void unsetcbreak() \/**\/$/
unsetparam	params.c	/^void unsetparam(s) \/**\/$/
unsettablesetfn	params.c	/^void unsettablesetfn(pm,x) \/**\/$/
unsetterm	zle_main.c	/^void unsetterm() \/**\/$/
unsettrap	utils.c	/^void unsettrap(t0) \/**\/$/
untokenize	exec.c	/^void untokenize(s) \/**\/$/
upcase	hist.c	/^void upcase(x) \/**\/$/
upcaseword	zle_word.c	/^void upcaseword() \/**\/$/
updatestatus	jobs.c	/^void updatestatus(jn) \/**\/$/
uphistory	zle_hist.c	/^void uphistory() \/**\/$/
uplineorhistory	zle_hist.c	/^void uplineorhistory() \/**\/$/
uplineorsearch	zle_hist.c	/^void uplineorsearch() \/**\/$/
uremnode	table.c	/^vptr uremnode(list,nd) \/**\/$/
usernamegetfn	params.c	/^char *usernamegetfn(pm) \/**\/$/
usetab	zle_tricky.c	/^int usetab() \/**\/$/
varcmdssetfn	params.c	/^void varcmdssetfn(pm,x) \/**\/$/
viaddeol	zle_vi.c	/^void viaddeol() \/**\/$/
viaddnext	zle_vi.c	/^void viaddnext() \/**\/$/
vibackwardblankword	zle_word.c	/^void vibackwardblankword() \/**\/$/
vibackwardchar	zle_move.c	/^void vibackwardchar() \/**\/$/
vibackwarddeletechar	zle_misc.c	/^void vibackwarddeletechar() \/**\/$/
vibackwardkillword	zle_word.c	/^void vibackwardkillword() \/**\/$/
vibackwardword	zle_word.c	/^void vibackwardword() \/**\/$/
vibeginningofline	zle_move.c	/^void vibeginningofline() \/**\/$/
vicapslockpanic	zle_misc.c	/^void vicapslockpanic() \/**\/$/
vichange	zle_vi.c	/^void vichange() \/**\/$/
vichangeeol	zle_vi.c	/^void vichangeeol() \/**\/$/
vichangewholeline	zle_vi.c	/^void vichangewholeline() \/**\/$/
vicmdmode	zle_vi.c	/^void vicmdmode() \/**\/$/
videlete	zle_vi.c	/^void videlete() \/**\/$/
videletechar	zle_vi.c	/^void videletechar() \/**\/$/
viendofline	zle_move.c	/^void viendofline() \/**\/$/
vifetchhistory	zle_hist.c	/^void vifetchhistory() \/**\/$/
vifindnextchar	zle_move.c	/^void vifindnextchar() \/**\/$/
vifindnextcharskip	zle_move.c	/^void vifindnextcharskip() \/**\/$/
vifindprevchar	zle_move.c	/^void vifindprevchar() \/**\/$/
vifindprevcharskip	zle_move.c	/^void vifindprevcharskip() \/**\/$/
vifirstnonblank	zle_move.c	/^void vifirstnonblank() \/**\/$/
viforwardblankword	zle_word.c	/^void viforwardblankword() \/**\/$/
viforwardblankwordend	zle_word.c	/^void viforwardblankwordend() \/**\/$/
viforwardchar	zle_move.c	/^void viforwardchar() \/**\/$/
viforwardword	zle_word.c	/^void viforwardword() \/**\/$/
viforwardwordend	zle_word.c	/^void viforwardwordend() \/**\/$/
vigetkey	zle_vi.c	/^int vigetkey() \/**\/$/
vigotocolumn	zle_move.c	/^void vigotocolumn() \/**\/$/
vigotomark	zle_move.c	/^void vigotomark() \/**\/$/
vigotomarkline	zle_move.c	/^void vigotomarkline() \/**\/$/
vihistorysearchbackward	zle_hist.c	/^void vihistorysearchbackward() \/**\/$/
vihistorysearchforward	zle_hist.c	/^void vihistorysearchforward() \/**\/$/
viindent	zle_vi.c	/^void viindent() \/**\/$/
viinsert	zle_vi.c	/^void viinsert() \/**\/$/
viinsertbol	zle_vi.c	/^void viinsertbol() \/**\/$/
vijoin	zle_misc.c	/^void vijoin() \/**\/$/
vikillline	zle_misc.c	/^void vikillline() \/**\/$/
vimatchbracket	zle_move.c	/^void vimatchbracket() \/**\/$/
viopenlineabove	zle_vi.c	/^void viopenlineabove() \/**\/$/
viopenlinebelow	zle_vi.c	/^void viopenlinebelow() \/**\/$/
vioperswapcase	zle_vi.c	/^void vioperswapcase() \/**\/$/
viputafter	zle_misc.c	/^void viputafter() \/**\/$/
virepeatchange	zle_vi.c	/^void virepeatchange() \/**\/$/
virepeatfind	zle_move.c	/^void virepeatfind() \/**\/$/
virepeatsearch	zle_hist.c	/^void virepeatsearch() \/**\/$/
vireplace	zle_vi.c	/^void vireplace() \/**\/$/
vireplacechars	zle_vi.c	/^void vireplacechars() \/**\/$/
virevrepeatfind	zle_move.c	/^void virevrepeatfind() \/**\/$/
virevrepeatsearch	zle_hist.c	/^void virevrepeatsearch() \/**\/$/
visetbuffer	zle_misc.c	/^void visetbuffer() \/**\/$/
visetmark	zle_move.c	/^void visetmark() \/**\/$/
visubstitute	zle_vi.c	/^void visubstitute() \/**\/$/
viswapcase	zle_misc.c	/^void viswapcase() \/**\/$/
viunindent	zle_vi.c	/^void viunindent() \/**\/$/
viyank	zle_vi.c	/^void viyank() \/**\/$/
viyankeol	zle_vi.c	/^void viyankeol() \/**\/$/
vptr	mem.c	/^static vptr (*lastcalloc) DCLPROTO((int));$/
waitfork	utils.c	/^int waitfork() \/**\/$/
waitforpid	jobs.c	/^void waitforpid(pid) \/**\/$/
waitjob	jobs.c	/^void waitjob(job) \/**\/$/
waitjobs	jobs.c	/^void waitjobs() \/**\/$/
watchlog	watch.c	/^void watchlog(inout,u,w,fmt) \/**\/$/
watchlog2	watch.c	/^void watchlog2(inout,u,fmt) \/**\/$/
wordcharsgetfn	params.c	/^char *wordcharsgetfn(pm) \/**\/$/
wordcharssetfn	params.c	/^void wordcharssetfn(pm,x) \/**\/$/
xpandbraces	glob.c	/^void xpandbraces(list,np) \/**\/$/
xpandredir	glob.c	/^int xpandredir(fn,tab) \/**\/$/
xsymlink	utils.c	/^char *xsymlink(s) \/**\/$/
xsymlinks	utils.c	/^int xsymlinks(s,flag) \/**\/$/
yank	zle_misc.c	/^void yank() \/**\/$/
yankpop	zle_misc.c	/^void yankpop() \/**\/$/
yyerror	parse.c	/^void yyerror() \/**\/$/
yylex	lex.c	/^void yylex() \/**\/$/
zalloc	mem.c	/^vptr zalloc(l) \/**\/$/
zcalloc	mem.c	/^vptr zcalloc(size) \/**\/$/
zerr	utils.c	/^void zerr(fmt,str,num) \/**\/$/
zerrnam	utils.c	/^void zerrnam(cmd,fmt,str,num) \/**\/$/
zexecve	exec.c	/^int zexecve(pth,argv) \/**\/$/
zexit	builtin.c	/^int zexit(val) \/**\/$/
zgetenv	utils.c	/^char *zgetenv(s) \/**\/$/
zgetwd	exec.c	/^char *zgetwd() \/**\/$/
zleread	zle_main.c	/^unsigned char *zleread(ppt,ppt2,plen) \/**\/$/
zread	builtin.c	/^int zread() \/**\/$/
zstrtol	exec.c	/^long int zstrtol(s,t,base) \/**\/$/
ztrdup	mem.c	/^char *ztrdup(s) \/**\/$/
ztrftime	utils.c	/^int ztrftime(buf,bufsize,fmt,tm) \/**\/$/
ztrncpy	utils.c	/^void ztrncpy(s,t,len) \/**\/$/
ztrstr	table.c	/^char *ztrstr(s,t) \/**\/$/
zyztem	utils.c	/^int zyztem(s,t) \/**\/$/
zzlex	math.c	/^int zzlex() \/**\/$/
