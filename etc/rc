#	BSDI	$Id: rc,v 1.15 1994/01/30 10:54:16 donn Exp $
#	@(#)rc	5.27 (Berkeley) 6/5/91

# System startup script run by init on autoboot
# or after single-user.
# Output and error are redirected to console by init,
# and the console is the controlling terminal.

stty status '^T'

# Set shell to ignore SIGINT (2), but not children;
# shell catches SIGQUIT (3) and returns to single user after fsck.
trap : 2
trap : 3	# shouldn't be needed

HOME=/; export HOME
PATH=/sbin:/bin:/usr/sbin:/usr/bin
export PATH

if [ -r /fastboot ]
then
	echo Fast boot ... skipping disk checks
elif [ $1x = autobootx ]
then
	echo Automatic reboot in progress...
	fsck -p
	case $? in
	0)
		;;
	2)
		exit 1
		;;
	4)
		reboot
		echo "reboot failed... help!"
		exit 1
		;;
	8)
		echo "Automatic file system check failed... help!"
		exit 1
		;;
	12)
		echo "Reboot interrupted"
		exit 1
		;;
	130)
		# interrupt before catcher installed
		exit 1
		;;
	*)
		echo "Unknown error in reboot"
		exit 1
		;;
	esac
fi

trap "echo 'Reboot interrupted'; exit 1" 3

swapon -a

umount -a >/dev/null 2>&1
mount -a -t nonfs
rm -f /fastboot		# XXX (root now writeable)

# set hostname, turn on network
echo 'starting network'
. /etc/netstart

mount -a -t nfs 

# clean up left-over files
rm -f /etc/nologin
rm -f /var/spool/uucp/LCK.*
rm -f /var/spool/uucp/STST/*
rm -f /var/spool/at/atrun.lock
(cd /var/run && { rm -rf -- *; cp /dev/null utmp; chgrp utmp utmp; chmod 664 utmp; })

echo -n 'starting system logger'
rm -f /dev/log
syslogd

# $timedflags is imported from /etc/netstart;
# if $timedflags == NO, timed isn't run.
if [ X${timedflags} != X"NO" ]; then
	echo -n ', time daemon'; timed $timedflags
fi
echo '.'

# /var/crash should be a directory or a symbolic link
# to the crash directory if core dumps are to be saved.
if [ -d /var/crash ]; then
	echo checking for core dump...
	savecore /var/crash
fi

				echo -n 'checking quotas:'
quotacheck -a
				echo ' done.'
quotaon -a

# build ps databases
kvm_mkdb /bsd
dev_mkdb

# set up for the DOS emulator
if [ -f /usr/sbin/dosfirstpage ]; then
	dosfirstpage
fi

chmod 666 /dev/tty[pqrs]*

# check the password temp/lock file
if [ -f /etc/ptmp ]
then
	logger -s -p auth.err \
	'password file may be incorrect -- /etc/ptmp exists'
fi

# recover nvi editor files
virec=/var/tmp/vi.recover/recover.*
if [ "$virec" != "/var/tmp/vi.recover/recover.*" ]; then
	echo -n 'recovering editor tmps: '
	for i in $virec; do
		sendmail -t < $i 
	done
	echo done
else
	echo 'no editor tmps to recover'
fi
unset virec

echo clearing /tmp

# prune quickly with one rm, then use find to clean up /tmp/[lq]*
# (not needed with mfs /tmp, but doesn't hurt there...)
(cd /tmp && rm -rf [a-km-pr-zA-Z]* &&
    find -d . ! -name . ! -name lost+found ! -name quotas -exec rm -rf -- {} \;)

if [ -f /var/account/acct ]; then
    echo 'turning on accounting';	accton /var/account/acct
fi

echo 'checking system configuration'
chkconfig

echo -n standard daemons:
echo -n ' update';		update
echo -n ' cron';		cron
echo '.'

echo -n starting network daemons:

# $gated and $routedflags are imported from /etc/netstart.
# If $gated == YES, gated is used; otherwise routed.
# If $routedflags == NO, routed isn't run.
if [ X${gated} = X"YES" -a -r /etc/gated.conf ]; then
	echo -n ' gated';	gated $gatedflags
elif [ X${routedflags} != X"NO" ]; then
	echo -n ' routed';	routed $routedflags
fi

if [ -f /etc/named.boot ]; then
	echo -n ' named';	named
fi

# $rwhod is imported from /etc/netstart;
# if $rwhod is set to something other than NO, rwhod is run.
if [ ${rwhod-NO} != "NO" ]; then
	[ X${rwhod} = "XYES" ] && rwhod=""
	echo -n " rwhod $rwhod";	rwhod $rwhod
fi

# $rstatd is imported from /etc/netstart;
# if $rstatd is not to something other than NO, rstatd is run.
if [ ${rstatd-NO} != "NO" ]; then
	echo -n ' rstatd';	rstatd &
fi

echo -n ' printer';		lpd

echo -n ' portmap';		portmap

# Only start mountd and nfs daemons if /etc/exports exists
if [ -f /etc/exports ]; then
    echo -n ' mountd';		mountd
    echo -n ' nfsd';		eval nfsd ${NFSD_OPTS- -u 0,0,4 -t 0,0}
fi

echo -n ' nfsiod';		nfsiod 4

echo -n ' sendmail';		sendmail -bd -q30m
echo -n ' inetd';		inetd
echo '.'

sh /etc/rc.local

date
exit 0
