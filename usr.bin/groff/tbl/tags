add_entry	table.cc	/^void table::add_entry(int r, int c, const string &/
add_rows	main.cc	/^void format::add_rows(int n)$/
add_tab	table.cc	/^void simple_entry::add_tab()$/
add_vlines	table.cc	/^void table::add_vlines(int r, const char *v)$/
block_diversion_name	table.cc	/^string block_diversion_name(int r, int c)$/
block_entry	table.cc	/^block_entry::~block_entry()$/
block_height_reg	table.cc	/^string block_height_reg(int r, int c)$/
block_width_reg	table.cc	/^string block_width_reg(int r, int c)$/
build_span_list	table.cc	/^void table::build_span_list()$/
check	table.cc	/^void table::check()$/
column_divide_reg	table.cc	/^string column_divide_reg(int col)$/
column_end_reg	table.cc	/^string column_end_reg(int col)$/
column_separation_reg	table.cc	/^string column_separation_reg(int col)$/
column_start_reg	table.cc	/^string column_start_reg(int col)$/
compute_separation_factor	table.cc	/^void table::compute_separation_factor()$/
compute_span_width	table.cc	/^void compute_span_width(int start_col, int end_col/
contents	table.cc	/^: table_entry(m), contents(s)$/
debug_print	main.cc	/^void entry_format::debug_print() const$/
determine_row_type	table.cc	/^void table::determine_row_type()$/
divert	table.cc	/^int table_entry::divert(int, const string *, int */
divide_span	table.cc	/^void table::divide_span(int start_col, int end_col/
do_depth	table.cc	/^void table_entry::do_depth()$/
do_divert	table.cc	/^void block_entry::do_divert(int alphabetic, int nc/
do_width	table.cc	/^void table_entry::do_width()$/
double_vrule_on_left	table.cc	/^: simple_entry(m), double_vrule_on_right(0), doubl/
entry_modifier	main.cc	/^entry_modifier::~entry_modifier()$/
format	main.cc	/^format::~format()$/
free_input_entry_format_list	main.cc	/^void free_input_entry_format_list(input_entry_form/
get	main.cc	/^int table_input::get()$/
init_output	table.cc	/^void table::init_output()$/
init_span_reg	table.cc	/^void init_span_reg(int start_col, int end_col)$/
input_entry_format	main.cc	/^input_entry_format::~input_entry_format()$/
input_filename	table.cc	/^  input_lineno(-1), input_filename(0)$/
line_entry	table.cc	/^: line_entry(m)$/
line_type	table.cc	/^int table_entry::line_type()$/
linesize	main.cc	/^: flags(0), tab_char('\\t'), decimal_point_char('
ncolumns	main.cc	/^format::format(int nr, int nc) : nrows(nr), ncolum/
next	main.cc	/^: entry_format(t), next(p)$/
note_double_vrule_on_left	table.cc	/^void table_entry::note_double_vrule_on_left(int)$/
note_double_vrule_on_right	table.cc	/^void table_entry::note_double_vrule_on_right(int)$/
position_vertically	table.cc	/^void simple_entry::position_vertically()$/
print	table.cc	/^void simple_entry::print()$/
print_contents	table.cc	/^void text_entry::print_contents()$/
prints	table.cc	/^inline void prints(char c)$/
process_data	main.cc	/^table *process_data(table_input &in, format *f, op/
process_format	main.cc	/^format *process_format(table_input &in, options *o/
process_input_file	main.cc	/^void process_input_file(FILE *fp)$/
process_options	main.cc	/^options *process_options(table_input &in)$/
restore_inline_modifier	table.cc	/^void restore_inline_modifier(const entry_modifier /
row_start_reg	table.cc	/^string row_start_reg(int row)$/
row_top_reg	table.cc	/^string row_top_reg(int row)$/
set_inline_modifier	table.cc	/^void set_inline_modifier(const entry_modifier *m)$/
set_location	table.cc	/^void table_entry::set_location()$/
set_modifier	table.cc	/^void set_modifier(const entry_modifier *m)$/
simple_entry	table.cc	/^: simple_entry(m)$/
simple_print	table.cc	/^void simple_entry::simple_print(int)$/
simple_text_entry	table.cc	/^: simple_text_entry(s, m)$/
span_alphabetic_width_reg	table.cc	/^string span_alphabetic_width_reg(int start_col, in/
span_left_numeric_width_reg	table.cc	/^string span_left_numeric_width_reg(int start_col, /
span_right_numeric_width_reg	table.cc	/^string span_right_numeric_width_reg(int start_col,/
span_width_reg	table.cc	/^string span_width_reg(int start_col, int end_col)$/
stagger	main.cc	/^: vertical_alignment(CENTER), zero_width(0), stagg/
state	main.cc	/^: fp(p), state(START)$/
strieq	main.cc	/^int strieq(const char *p, const char *q)$/
sum_columns	table.cc	/^void table::sum_columns(int start_col, int end_col/
table_entry	table.cc	/^table_entry::~table_entry()$/
text_entry	table.cc	/^text_entry::~text_entry()$/
to_double_line_entry	table.cc	/^double_line_entry *table_entry::to_double_line_ent/
to_simple_entry	table.cc	/^simple_entry *table_entry::to_simple_entry()$/
to_single_line_entry	table.cc	/^single_line_entry *table_entry::to_single_line_ent/
type	main.cc	/^entry_format::entry_format() : type(FORMAT_LEFT)$/
unget	main.cc	/^void table_input::unget(char c)$/
