/*
**	Copyright 1992 UUNET Technologies Inc.
**
**	All rights reserved.
**
**	Use of this software is subject to a licence agreement.
*/

/*
**	Binary search algorithm, generalized from Knuth (6.2.1) Algorithm B.
**
**	RCSID $Id: bsearch.c.uunet,v 1.1.1.1 1992/09/28 20:08:51 trent Exp $
**
**	$Log: bsearch.c.uunet,v $
# Revision 1.1.1.1  1992/09/28  20:08:51  trent
# Latest UUCP from ziegast@uunet
#
 * Revision 1.1  1992/04/14  21:29:38  piers
 * Initial revision
 *
*/



char *
bsearch(
	char *		key,		/* Key to be located */
	register char *	base,		/* Beginning of table */
	register int	nel,		/* Number of elements */
	register int	width,		/* Width of an element */
	int		(*compar)(char *, char *)
					/* Comparison function */
)
{
	register char *	u;		/* Last element in table */
	register char *	i;		/* Approximate middle element */
	register int	res;		/* Result of comparison */        

	if ( --nel < 0 )
		return (char *)0;

	u = base + nel*width;

	while ( u >= base )
	{
		nel /= 2;
		i = base + width*nel;

		if ( (res = (*compar)(key, i)) == 0 )
			return i;
		else
		if ( res < 0 )
			u = i - width;
		else
			base = i + width;

		nel = (u-base) / width;
	}

	return (char *)0;
}
